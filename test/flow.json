[{"id":"82161188.9f48","type":"subflow","name":"ui-table handler","info":"# ui-table handler\nUniversal handler for ui-table.\n## features\n- buffer table data\n- add or update individual rows or cells of the table\n- delete rows\n- clear tableData\n- handle column width\n- handle column order\n\n## configuration\n- `tabulator` json formatted object containing configuration of the table. See ui-table for more details.\n- `property` property of the msg object that contains the data to be passed to ui-table. I.e. *state* `msg.state`\n- `index` index column to identify individual rows. Each message containing data must have a unique `msg.topic` to identify the row. Messages without this `msg.topic` will be droped. It is not nessesary but possible to display the index column in the table. Do not enable editing on this column otherwise you will loose the connection and another row will be added to the table as soon as a new message arrives!\n\n   Defaults to *$topic* `msg.state.$topic`\n- `dashboard` name of the dashboard tab to only update the table if the dashboard is visible. If empty the table will be updated on every tab change and connect.\n- `context` configuration of context data. The subflow will save or cache data in the flows context using `$parent.`. \n   **tableData** caches the incoming data to restore it on `ui-control´ *change* messages.\n   **tableConfig** saves column width and order to save the interactive table layot\n   **tableEdit** saves edits on the table data otherwise it would be overwritten when new data arrives\n```json\n{\n    \"tableData\": {\n        \"name\": \"tableData\"\n    },\n    \"tableConfig\": {\n        \"name\": \"tableConfig\",\n        \"storage\": \"file\"\n    },\n    \"tableEdit\": {\n        \"name\": \"tableEdit\",\n        \"storage\": \"file\"\n    }\n}\n```\n\n## commands\ncommands can be passed by sending a object as `msg.payload`\n- delete custom colum order and restore colum order from the tabulator json. This is important if you add or delete columns in the tabulator config otherwise the columns most likely don`t show up\n```json\n{\n    \"command\": \"delete\",\n    \"object\": \"columnOrder\"\n}\n```\n- delete custom column widths\n```json\n{\n    \"command\": \"delete\",\n    \"object\": \"columnWidth\"\n}\n```\n- delete tableCache\n```json\n{\n    \"command\": \"delete\",\n    \"object\": \"tableCache\"\n}\n```\n\n## background\nui-table warps the powerfull tabluator library. This subflow makes it easier to unleash the powerfull features of ui-table","category":"dashboard","in":[{"x":54,"y":85,"wires":[{"id":"7a1312f0.eecf5c"}]}],"out":[{"x":360,"y":85,"wires":[{"id":"7a1312f0.eecf5c","port":1}]},{"x":360,"y":136,"wires":[{"id":"7a1312f0.eecf5c","port":2}]}],"env":[{"name":"tabulator","type":"json","value":"{\"tabulator\":{\"responsiveLayout\":\"collapse\",\"responsiveLayoutCollapseStartOpen\":false,\"index\":\"$name\",\"layout\":\"fitColumns\",\"movableColumns\":true,\"groupBy\":\"\",\"columnResized\":\"function(column){     var newColumn = {         field: column._column.field,         visible: column._column.visible,         width: column._column.width,         widthFixed: column._column.widthFixed,         widthStyled: column._column.widthStyled     }; this.send({topic:this.config.topic,ui_control:{callback:'columnResized',columnWidths:newColumn}}); }\",\"columnMoved\":\"function(column, columns){     var newColumns=[];     columns.forEach(function (column) {         newColumns.push({'field': column._column.definition.field, 'title': column._column.definition.title});     });     this.send({topic:this.config.topic,ui_control:{callback:'columnMoved',columns:newColumns}}); }\",\"rowFormatter\":\"function(row){     var data = row.getData();     switch (data.$state) {         case \\\"lost\\\":             row.getElement().style.backgroundColor = \\\"#9e2e66\\\";             row.getElement().style.color = \\\"#a6a6a6\\\";             break;         case \\\"sleeping\\\":             row.getElement().style.backgroundColor = \\\"#336699\\\";             break;         case \\\"disconnected\\\":             row.getElement().style.backgroundColor = \\\"#cc3300\\\";             row.getElement().style.color = \\\"#a6a6a6\\\";             break;         case \\\"alert\\\":             row.getElement().style.backgroundColor = \\\"#A6A6DF\\\";             break;         case \\\"init\\\":             row.getElement().style.backgroundColor = \\\"#f2f20d\\\";             break;         case \\\"ready\\\":             row.getElement().style.backgroundColor = \\\"\\\";             row.getElement().style.color = \\\"\\\";             break;         } }\",\"columns\":[{\"formatter\":\"responsiveCollapse\",\"width\":30,\"minWidth\":30,\"align\":\"center\",\"resizable\":false,\"headerSort\":false,\"frozen\":true,\"title\":\"expand\",\"field\":\"expand\",\"headerVertical\":\"flip\"},{\"formatter\":\"function(cell, formatterParams, onRendered) {      var html = cell.getValue(); return html;  }\",\"title\":\"State\",\"field\":\"$stateIcon\",\"width\":100,\"frozen\":true,\"headerVertical\":\"flip\"},{\"formatter\":\"function(cell, formatterParams, onRendered) {     var html = cell.getValue(); return html;  }\",\"title\":\"Signal\",\"field\":\"signalIcon\",\"width\":100,\"frozen\":true,\"headerVertical\":\"flip\"},{\"title\":\"Name\",\"field\":\"$name\",\"width\":100,\"frozen\":true,\"headerVertical\":\"flip\"},{\"title\":\"State\",\"field\":\"$state\",\"width\":100,\"align\":\"center\",\"headerVertical\":\"flip\"},{\"title\":\"last-ready\",\"field\":\"lastSeenreadyFormatted\",\"width\":100,\"align\":\"left\",\"headerVertical\":\"flip\"},{\"title\":\"Homie\",\"field\":\"$homie\",\"width\":100,\"align\":\"left\",\"headerVertical\":\"flip\"},{\"title\":\"Platform\",\"field\":\"$implementation\",\"width\":100,\"align\":\"left\",\"headerVertical\":\"flip\"},{\"title\":\"Statistics\",\"columns\":[{\"title\":\"Interval\",\"field\":\"interval\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"outputFormat\":\"d hh:mm:ss\",\"inputFormat\":\"seconds\",\"invalidPlaceholder\":\"(unknown)\"},\"title\":\"Uptime\",\"field\":\"uptime\",\"formatter\":\"function(cell, formatterParams, onRendered){     var pad = function (num) {         return (\\\"0\\\"+num).slice(-2);     };     var secs = Number(cell.getValue());     if (Number.isNaN(secs)) return;     var minutes = Math.floor(secs / 60);     secs = secs%60;     var hours = Math.floor(minutes/60);     minutes = minutes%60;     var days = Math.floor(hours/24);     hours = hours%24;     if (days>0)         return days+\\\"d \\\"+pad(hours)+\\\":\\\"+pad(minutes);     else         return pad(hours)+\\\":\\\"+pad(minutes)+\\\":\\\"+pad(secs); }\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":0,\"max\":100,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) {if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" %</span>\\\"; else return; }\",\"legendColor\":\"#FFFFFF\",\"legendAlign\":\"center\"},\"title\":\"Signal\",\"field\":\"signal\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":2.5,\"max\":3.5,\"color\":[\"red\",\"green\",\"red\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" V</span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Supply\",\"field\":\"supply\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":0,\"max\":100,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) {     if (value>0)         return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" %</span>\\\";     else         return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Battery\",\"field\":\"battery\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":0,\"max\":100000,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+(value/1024).toFixed(2)+\\\" kB</span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Memory\",\"field\":\"freeheap\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"target\":\"_blank\",\"min\":0,\"max\":100,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) {     if (value>0)         return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" %</span>\\\";     else         return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"CPU load\",\"field\":\"cpuload\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":20,\"max\":60,\"color\":[\"green\",\"orange\",\"red\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" °C</span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"CPU temp\",\"field\":\"cputemp\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"}]},{\"title\":\"Firmware\",\"columns\":[{\"formatter\":\"link\",\"formatterParams\":{\"labelField\":\"$localip\",\"urlPrefix\":\"http://\",\"target\":\"_blank\"},\"title\":\"IP\",\"field\":\"$localip\",\"width\":100},{\"title\":\"mac\",\"field\":\"$mac\",\"width\":100},{\"title\":\"Accsess Point\",\"field\":\"SSID\",\"width\":100},{\"title\":\"Firmware\",\"field\":\"name\",\"width\":100},{\"title\":\"Version\",\"field\":\"version\",\"width\":100},{\"title\":\"Last Boot Cause\",\"field\":\"lastBootCause\",\"width\":100},{\"title\":\"Reset Reason\",\"field\":\"resetReason\",\"width\":100}]}]},\"customHeight\":12}","ui":{"icon":"font-awesome/fa-table","label":{"en-US":"Tabulator"},"type":"input","opts":{"types":["json","env"]}}},{"name":"tableDataProp","type":"str","value":"row","ui":{"icon":"font-awesome/fa-tag","label":{"en-US":"rowProperty"},"type":"input","opts":{"types":["str","num","bool","json","bin","env"]}}},{"name":"tableIndex","type":"str","value":"$topic","ui":{"icon":"font-awesome/fa-indent","label":{"en-US":"Index"},"type":"input","opts":{"types":["str","json","env"]}}},{"name":"dashboard","type":"str","value":"Remote Device Table","ui":{"icon":"font-awesome/fa-dashboard","label":{"en-US":"Dashboard"},"type":"input","opts":{"types":["str","env"]}}},{"name":"tableContext","type":"json","value":"{\"tableData\":{\"name\":\"tableData\"},\"tableConfig\":{\"name\":\"tableConfig\",\"storage\":\"file\"},\"tableEdit\":{\"name\":\"tableEdit\",\"storage\":\"file\"}}","ui":{"icon":"font-awesome/fa-database","label":{"en-US":"Context"},"type":"input","opts":{"types":["json","env"]}}}],"color":"#3FADB5","icon":"node-red-dashboard/ui_slider.png","status":{"x":360,"y":34,"wires":[{"id":"7a1312f0.eecf5c","port":0}]}},{"id":"7a1312f0.eecf5c","type":"function","z":"82161188.9f48","name":"handle tableData","func":"var status = {fill:\"red\",shape:\"dot\",text: \"payload \"};\nvar tableIndex = env.get(\"tableIndex\") || \"$topic\";\nvar tableDataProp = env.get(\"tableDataProp\") || \"row\";\nvar tableContext = env.get(\"tableContext\");\nvar dashboard = env.get(\"dashboard\");\nif (!tableContext.hasOwnProperty(\"tableData\") || !tableContext.hasOwnProperty(\"tableConfig\")) {\n    status.text=\"tableContext not defined\";\n    node.error(status.text);\n    return [{payload:status},null];\n}\n\n// context store to cache table data (memoryOnly prefered)\nvar tableData = flow.get(\"$parent.\"+tableContext.tableData.name,tableContext.tableData.storage);\nif (tableData===undefined) {\n    node.warn(\"[ui-table handler] tableData initialized!\");\n    tableData={};\n    flow.set(\"$parent.\"+tableContext.tableData.name,tableData,tableContext.tableData.storage);\n}\n\n// context Store to save table configuration (file)\nvar tableConfig = flow.get(\"$parent.\"+tableContext.tableConfig.name,tableContext.tableConfig.storage);\nif (tableConfig===undefined) {\n    node.warn(\"[ui-table handler] tableConfig initialized!\");\n    tableConfig={ResponsiveLayout:true};\n    flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n}\n\n// context Store to save table configuration (file)\nvar tableEdit;\nif (tableContext.hasOwnProperty(\"tableEdit\")) {\n    tableEdit = flow.get(\"$parent.\"+tableContext.tableEdit.name,tableContext.tableEdit.storage);\n    if (tableEdit===undefined) {\n        node.warn(\"[ui-table handler] tableEdit initialized!\");\n        tableEdit={};\n        flow.set(\"$parent.\"+tableContext.tableEdit.name,tableEdit,tableContext.tableEdit.storage);\n    }\n}\n\n// function to merge partial data into existing table row\nvar mergeObject = function (destination, source, filter) {\n    for (let currentSource in source) {\n        if (source.hasOwnProperty(currentSource)) {\n            if (filter!==undefined && tableEdit && tableEdit.hasOwnProperty(filter) && tableEdit[filter].hasOwnProperty(currentSource)) {\n                destination[currentSource]= tableEdit[filter][currentSource];\n                source[currentSource]=tableEdit[filter][currentSource];\n            } else {\n                destination[currentSource]= source[currentSource];\n            }\n        }    \n    }\n    return source;\n};\n    \n// deep search for a column\nvar searchTabulatorColumn = function (columns,key,match) {\n    var result;\n    for (let column of columns) {\n        if (column.hasOwnProperty(\"columns\")) {\n            result = searchTabulatorColumn(column.columns,key,match);\n            if (result!==undefined) return result;\n        } else if (column.hasOwnProperty(key) && column[key]===match) {\n            return column;\n        }\n    }\n};\n\n// command message to update add or update data on ui-table\nvar msgToTable={};\nmsgToTable.payload={\n    \"command\":\"updateOrAddData\",\n    \"arguments\": [],\n    \"returnPromise\": false\n};\n\nif (msg.hasOwnProperty(tableDataProp)) {\n    // store data for later recover\n    if (!msg.hasOwnProperty(\"topic\")) { // check if index existst\n        status.text=\"msg.topic not defined!\";\n        return [{payload:status},null];\n    }\n    if (!tableData.hasOwnProperty(msg.topic)){ // first seen\n        tableData[msg.topic]={};\n        if (tableEdit && tableEdit.hasOwnProperty(msg.topic)) { // table edits available!\n            Object.keys(tableEdit[msg.topic]).forEach((key) => {\n                msg[tableDataProp][key]=tableEdit[msg.topic][key];\n                tableData[msg.topic][key]=tableEdit[msg.topic][key];\n            })\n        }\n    }\n    if (!tableData[msg.topic].hasOwnProperty(tableIndex)) tableData[msg.topic][tableIndex]=msg.topic;\n    msg[tableDataProp]=mergeObject(tableData[msg.topic],msg[tableDataProp],msg.topic);\n    msg[tableDataProp][tableIndex]=msg.topic;\n    msgToTable.payload.arguments=[[msg[tableDataProp]]];\n    status.fill=\"green\";\n    status.text=msg.topic+\" updated\";\n    return [{payload:status},msgToTable,null];\n} if (msg.payload===\"connect\" || (msg.payload===\"change\" && msg.name===dashboard) || (msg.hasOwnProperty(\"payload\") && msg.payload.hasOwnProperty(\"command\"))) { \n    if (!msg.hasOwnProperty(\"ui_control\")) {\n        msg.ui_control = env.get('tabulator');\n        status.text+=\" ui_control added\";\n    }\n    //process commands\n    //node.warn({\"command\":msg.payload.command,\"msg\":msg,\"object\":msg.payload.object})\n    if (msg.payload.hasOwnProperty(\"command\")) {\n        status.fill=\"blue\";\n        switch(msg.payload.command) {\n            case 'deleteTable':\n                flow.set(\"$parent.\"+tableContext.tableData.name,undefined,tableContext.tableData.storage);\n                tableData={};\n                status.text=\"tabledata deleted\";\n                node.warn(\"[ui-table handler] \"+\"tabledata deleted\");\n                break;\n            case 'deleteDevice':\n                if (tableData.hasOwnProperty(msg.payload.object)) {\n                    delete tableData[msg.payload.object];\n                    status.text=msg.payload.object+\" deleted\";\n                } else {\n                    status.fill=\"yellow\";\n                    status.text=msg.payload.object+\" undefined\";\n                }\n                break;\n            case 'ignoreDevice':\n                if (tableData.hasOwnProperty(msg.payload.object)) {\n                    delete tableData[msg.payload.object];\n                    status.text=msg.payload.object+\" will be ignored\";\n                    if (!tableConfig.hasOwnProperty('ignoreDevice')) tableConfig.ignoreDevice={};\n                    tableConfig.ignoreDevice[msg.payload.object]=true;\n                }\n                break;\n            case 'unIgnoreDevice':\n                if (tableConfig.hasOwnProperty('ignoreDevice')) {\n                    delete tableConfig.ignoreDevice[msg.payload.object];\n                }\n                break;\n            case 'unIgnoreDevices':\n                delete tableConfig.ignoreDevice;\n                break;\n            case 'updateData':\n                status.text=\"column \"+msg.payload.column+\" updated\";\n                return [{payload:status},msg];\n            case 'updateTable':\n                status.text=msg.payload.command+\": \";\n                break;\n            case 'columnHide':\n                if (!tableConfig.hasOwnProperty('columnVisible')) tableConfig.columnVisible={};\n                tableConfig.columnVisible[msg.payload.object]=false;\n                break;\n            case 'columnUnHide':\n                if (!tableConfig.hasOwnProperty('columnVisible')) tableConfig.columnVisible={};\n                tableConfig.columnVisible[msg.payload.object]=true;\n                break;\n            case 'columnsUnHide':\n                for (let column in tableConfig.columnVisible) {\n                    if (tableConfig.columnVisible.hasOwnProperty(column)) tableConfig.columnVisible[column]=true;\n                }\n                break;\n            case 'refreshTable':\n                break;\n            case 'restoreColumnOrder':\n                delete tableConfig.columns;\n                break;\n            case 'resetColumnWidth':\n                delete tableConfig.columnWidths;\n                break;\n            case 'setResponsiveLayout':\n                tableConfig.ResponsiveLayout=!tableConfig.ResponsiveLayout;\n                break;\n            default:\n                status.fill=\"red\";\n                status.text=\"unknown command \"+msg.payload.command;\n                node.warn(\"[ui-table handler] \"+status.text);\n                break;\n        }\n        flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n        node.send([{payload:status},null,null]);\n    }\n\n    // crawl through tabulator arrays and updated user defined values\n    var crawlTabulator = function (columns,match,config,property) {\n        for (let column of columns) {\n            if (column.hasOwnProperty(\"columns\")) {\n                crawlTabulator(column.columns,match,config,property);\n            } else if (config.hasOwnProperty(column[match])) column[property]=config[column.field];\n        }\n    };\n    \n    // restore custom column width\n    if (tableConfig.hasOwnProperty(\"columnWidths\") && msg.hasOwnProperty(\"ui_control\")) {\n        crawlTabulator(msg.ui_control.tabulator.columns,\"field\",tableConfig.columnWidths,\"width\");\n    }\n    \n    // restore custom column hide/show\n    if (tableConfig.hasOwnProperty(\"columnVisible\") && msg.hasOwnProperty(\"ui_control\")) {\n        crawlTabulator(msg.ui_control.tabulator.columns,\"field\",tableConfig.columnVisible,\"visible\");\n    }\n    \n    // restore custom responsive / standard view\n    if (tableConfig.hasOwnProperty(\"ResponsiveLayout\")) {\n        if (!tableConfig.ResponsiveLayout) {\n            msg.ui_control.tabulator.responsiveLayout=false;\n        }\n        msg.ui_control.tabulator.columns.forEach((column,index) => {\n            if (column.formatter===\"responsiveCollapse\") { // hide expand column on any position\n                column.visible=tableConfig.ResponsiveLayout;\n                return;\n            }\n        });\n    }\n\n    // sort columns\n    if (tableConfig.hasOwnProperty(\"columns\") && msg.hasOwnProperty(\"ui_control\") && msg.ui_control.hasOwnProperty(\"tabulator\")) {\n        var addedColumns = 0;\n        var sortColumnsByLayout = function (sortColumns, columnsLayout, targetColumns) {\n            for (var layoutColumn=0;  layoutColumn<columnsLayout.length; layoutColumn++) {\n                for (var sortColumn in sortColumns) {\n                    if (sortColumns[sortColumn].hasOwnProperty(\"columns\")) {\n                        targetColumns.push({\"title\":sortColumns[sortColumn].title, \"columns\":[]});\n                        sortColumnsByLayout(sortColumns[sortColumn].columns,columnsLayout,targetColumns[targetColumns.length-1].columns);\n                        layoutColumn=addedColumns; // jump forward after childes added\n                    } else {\n                        if (columnsLayout[layoutColumn].field===sortColumns[sortColumn].field){\n                            targetColumns.push(sortColumns[sortColumn]);\n                            addedColumns++;\n                            break;\n                        }\n                    }\n                }\n            }\n        };                 \n        var newColumns=[];\n        sortColumnsByLayout(msg.ui_control.tabulator.columns,tableConfig.columns,newColumns);\n        msg.ui_control.tabulator.columns=newColumns;\n    }\n\n    // restore stored lines after connect\n    msg.payload=[];\n    for (let device in tableData) {\n        if (tableConfig && tableConfig.hasOwnProperty(\"ignoreDevice\") && tableConfig.ignoreDevice[device]) {\n            continue;\n        }\n        // merge edits into table\n        if (tableEdit && tableEdit.hasOwnProperty(device)) {\n            let tableRow = RED.util.cloneMessage(tableData[device]);\n            Object.keys(tableEdit[device]).forEach((field) => {\n                tableRow[field]=tableEdit[device][field];\n            });\n            msg.payload.push(tableRow);\n        } else {\n            msg.payload.push(tableData[device]);\n        }\n    }\n    \n    status.fill=\"blue\";\n    status.text+=\" \"+msg.payload.length+\" rows restored\";\n    return [{payload:status},msg];\n} if (msg.hasOwnProperty(\"ui_control\")) {\n    // callback from tabulator\n    status.fill=\"blue\";\n    status.text=\"unknown callback \"+msg.ui_control.callback;\n    switch(msg.ui_control.callback) {\n        case \"columnResized\": // save new column width\n            if (tableConfig.columnWidths===undefined) tableConfig.columnWidths={};\n            tableConfig.columnWidths[msg.ui_control.columnWidths.field]=msg.ui_control.columnWidths.width;\n            flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n            status.text=msg.ui_control.columnWidths.field+\"=\"+msg.ui_control.columnWidths.width+\"px\";\n            break;\n        case \"columnMoved\": // save new column order\n            if (tableConfig.columns===undefined) tableConfig.columns=[];\n            tableConfig.columns=msg.ui_control.columns;\n            flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n            status.text=\"new column order\";\n            break;\n        case \"cellEdited\":\n            if (tableEdit) {\n                if (!tableEdit.hasOwnProperty(msg[tableIndex])) tableEdit[msg[tableIndex]]={};\n                tableEdit[msg[tableIndex]][msg.field] = msg.payload; // save data and mark es edited field\n                flow.set(\"$parent.\"+tableContext.tableEdit.name,tableEdit,tableContext.tableEdit.storage);\n                status.text=msg[tableIndex]+\" \"+msg.field+\" edited to \"+msg.payload;\n                msg[tableDataProp]={};\n                msg[tableDataProp][tableIndex]=msg[tableIndex];\n                msg[tableDataProp][msg.field]=msg.payload;\n                msgToTable.payload.arguments=[[msg[tableDataProp]]];\n                node.send([{payload:status},msgToTable,msg]);\n            } else {\n                node.error(\"[ui-table handler] no tableEdit store defined!\")\n            }\n            break;\n        case \"rowContext\":\n            msg.ignoredDevices=[];\n            for (let device in tableConfig.ignoreDevice) {\n                if (tableConfig.ignoreDevice.hasOwnProperty(device)) {\n                    msg.ignoredDevices.push({\"text\":device,\"icon\":\"fa fa-plug\",\"topic\":\"unIgnoreDevice\",\"payload\":device})  \n                }\n            }\n            break;\n        case \"headerContext\":\n            msg.hiddenColumns=[];\n            let tabulatorConfig = env.get('tabulator');\n            for (let column in tableConfig.columnVisible) {\n                if (tableConfig.columnVisible.hasOwnProperty(column) &&\n                    !tableConfig.columnVisible[column]) {\n                    let configColumn=searchTabulatorColumn(tabulatorConfig.tabulator.columns,\"field\",column);\n                    let icon;\n                    if (configColumn.hasOwnProperty('title') && configColumn.title.toLowerCase().includes('</i>')) {\n                        // <i class='fa fa-star-half-o'></i> State\n                        let start=configColumn.title.indexOf(\"'fa \");\n                        let end=configColumn.title.indexOf(\"'\",start+1);\n                        icon=configColumn.title.substring(start+4,end);\n                    }\n                    msg.hiddenColumns.push({\"text\":column,\"icon\":icon,\"topic\":\"columnUnHide\",\"payload\":configColumn.field})  \n                }\n            }\n            break;\n        default:\n            // if rowIndex exists pass complete object\n            if (msg.hasOwnProperty(tableIndex)) {\n                msg.rowData=tableData[msg[tableIndex]];\n            }\n            status.text=\"pass message\";\n    }\n    return [{payload:status},null,msg];\n}\n// nothing to do bejond this point\nstatus.text+=\" [\"+msg.payload+\"]\";\nreturn [{payload:status},null];\n","outputs":3,"noerr":0,"x":192,"y":85,"wires":[[],[],[]],"icon":"font-awesome/fa-table"},{"id":"297abac8.084176","type":"tab","label":"UI-Table","disabled":false,"info":""},{"id":"5d9d31f3.a968a","type":"mqtt in","z":"297abac8.084176","name":"","topic":"sensorValues/#","qos":"0","datatype":"utf8","broker":"b81701a5.db23e","x":100,"y":220,"wires":[["9006364a.7ba428"]]},{"id":"9006364a.7ba428","type":"json","z":"297abac8.084176","name":"","property":"payload","action":"","pretty":false,"x":270,"y":180,"wires":[["db50ea1f.038428"]]},{"id":"f80fa46b.317ac8","type":"function","z":"297abac8.084176","name":"Translate BatteryNode","func":"\nif (msg.payload.hasOwnProperty(\"location\")) {\n    \n    \n    msg.topic=msg.payload[\"epoch\"];\n    \n    \n \n    msg.state={\"$epoch\":msg.payload[\"epoch\"]};\n    msg.state.location=msg.payload[\"location\"];\n    msg.state.date=msg.payload[\"date\"];\n    msg.state.time=msg.payload[\"time\"];\n    msg.state.name=msg.payload[\"location\"];\n    msg.state.voltage=msg.payload[\"voltage\"];\n    msg.state.temperature=msg.payload[\"temperature\"];\n    msg.state.humidity=msg.payload[\"humidity\"];\n    msg.state.pressure=msg.payload[\"pressure\"];\n    msg.state.light=msg.payload[\"light\"];\n    msg.state.openclose=msg.payload[\"openclose\"];\n    msg.state.level=msg.payload[\"level\"];\n    msg.state.presence=msg.payload[\"presence\"];\n    msg.state.motion=msg.payload[\"motion\"];\n    msg.state.custom=msg.payload[\"custom\"];\n    msg.state.rssi=msg.payload[\"rssi\"];\n    msg.state.mode=msg.payload[\"mode\"];\n    msg.state.ip=msg.payload[\"ip\"];\n    msg.state.channel=msg.payload[\"channel\"];\n    msg.state.sleeptime=msg.payload[\"sleeptime\"];\n    msg.state.uptime=msg.payload[\"uptime\"];\n    \n    //msg.state.cpuload=msg.payload.System.Load;\n    //msg.state.lastBootCause=msg.payload.System[\"Last Boot Cause\"];\n    //msg.state.resetReason=msg.payload.System[\"Reset Reason\"];\n    //msg.state.version=msg.payload.System.Build;\n    //msg.state.name=\"ESP Easy Mega\";\n\n    //if (msg.payload.hasOwnProperty(\"rssi\")) {\n        //msg.state.rssi=Math.min(Math.max(2 * (msg.payload.rssi + 100), 0), 100)\n     \n        //msg.state.$mac=msg.payload.WiFi[\"STA MAC\"];\n        //msg.state.SSID=msg.payload.WiFi.SSID;\n   }\n//}\n\nreturn msg;","outputs":1,"noerr":0,"x":620,"y":200,"wires":[["8db59659.f89858"]],"icon":"node-red/swap.svg"},{"id":"59794463.884bac","type":"debug","z":"297abac8.084176","name":"httpOut translated","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"true","targetType":"full","x":600,"y":100,"wires":[]},{"id":"8db59659.f89858","type":"link out","z":"297abac8.084176","name":"toPlugins","links":["628b173b.41a6e8"],"x":435,"y":240,"wires":[]},{"id":"7e1f9fea.c61b7","type":"function","z":"297abac8.084176","name":"add icons","func":"var icons= {\n    \"$state\":[\n        {\"value\":\"init\",\"icon\":\"fa fa-cog fa-spin\"},\n        {\"value\":\"ready\",\"icon\":\"fa fa-spinner fa-spin\"},\n        {\"value\":\"disconnected\",\"icon\":\"fa fa-times\"},\n        {\"value\":\"sleeping\",\"icon\":\"fa fa-moon-o\"},\n        {\"value\":\"lost\",\"icon\":\"fa fa-question-circle\"},\n        {\"value\":\"lostBroker\",\"icon\":\"fa fa-exclamation-triangle\"},\n        {\"value\":\"alert\",\"icon\":\"fa fa-exclamation-triangle\"}\n    ],\n    \"signal\":[\n        {\"value\":10,\"icon\":\"perm_scan_wifi\",\"style\":\"color:#cc0000\"},\n        {\"value\":20,\"icon\":\"wifi\",\"style\":\"color:#cc3300\"},\n        {\"value\":30,\"icon\":\"wifi\",\"style\":\"color:#cc6600\"},\n        {\"value\":40,\"icon\":\"wifi\",\"style\":\"color:#cc9900\"},\n        {\"value\":50,\"icon\":\"wifi\",\"style\":\"color:#cccc00\"},\n        {\"value\":60,\"icon\":\"wifi\",\"style\":\"color:#99cc00\"},\n        {\"value\":70,\"icon\":\"wifi\",\"style\":\"color:#66cc00\"},\n        {\"value\":80,\"icon\":\"wifi\",\"style\":\"color:#33cc00\"},\n        {\"value\":100,\"icon\":\"signal_wifi_4_bar\",\"style\":\"color:#00cc00\"},\n    ],\n    \"battery\":[\n        {\"value\":10,\"icon\":\"battery-alert\",\"style\":\"color:#cc0000\"},\n        {\"value\":20,\"icon\":\"battery_20\"},\n        {\"value\":30,\"icon\":\"battery_30\"},\n        {\"value\":50,\"icon\":\"battery_50\"},\n        {\"value\":60,\"icon\":\"battery_60\"},\n        {\"value\":70,\"icon\":\"battery_70\"},\n        {\"value\":80,\"icon\":\"battery_80\"},\n        {\"value\":90,\"icon\":\"battery_90\"},\n        {\"value\":100,\"icon\":\"battery_full\",\"style\":\"color:#00cc00\"},\n    ]\n};\n\nvar status = {fill:\"yellow\",shape:\"dot\",text: \"no msg.state\"};\nif (msg.hasOwnProperty(\"state\")) {\n    status.text=\"device=\";\n    status.text+=(msg.state.$name) ? msg.state.$name : msg.topic;\n    var formatHtml=function(icon) {\n        var html=\"\"\n        if (icon.icon.startsWith('fa')) {\n            html = \"<i class=\\\"\"+icon.icon+'\\\"></i>'; \n        } else {\n            html+='<i class=\"material-icons\"';\n            if (icon.hasOwnProperty(\"style\")) html+=' style=\"'+icon.style+'\"';\n            html+='>'+icon.icon+'</i>';                               \n        }\n        return html;\n    }\n    nextProperty: \n    for (var state in msg.state) {\n        if (icons.hasOwnProperty(state)) {\n            for (var icon of icons[state]) {\n                switch (typeof msg.state[state]) {\n                    case \"string\":\n                        if (msg.state[state]===icon.value) {\n                            msg.state[state+\"Icon\"]=formatHtml(icon);\n                            status.fill=\"green\";\n                            status.text+=state+\" \";\n                            continue nextProperty;\n                        }\n                        break;    \n                    case \"number\":\n                        if (msg.state[state]<=icon.value) {\n                            msg.state[state+\"Icon\"]=formatHtml(icon);\n                            status.fill=\"green\";\n                            status.text+=state+\" \";\n                            continue nextProperty;\n                        }\n                        break;\n                }\n            }\n        }\n    }    \n}\nnode.status(status);\nreturn msg;","outputs":1,"noerr":0,"x":300,"y":540,"wires":[["e43afcf8.76c17"]],"icon":"font-awesome/fa-wifi","info":"# Add and format icons\n- This node is configured by a json object. \n- All incomming data inside `msg.state`is inspected to the parent keys of this object. \n- The value contains an array of objects defining differend icons and styles to be added.\n- a html formatted string is added to `msg.state.[key+\"Icon\"]`\n- the current version supports font awesome icons supported by the dshboard and material icons including the style and size [ToDo] property\n- Sting values will be compared for a case sensitive match\n- values will be compared `<=`. So arrange the objects in a increasing order.\n\n## configuration object\n- defining the keys to be triggered\n```json\n{\n    \"$state\":[],\n    \"signal\":[],\n    \"battery\":[]\n}\n```\n- to trigger on a the value \"init\" to get a font awsome icon plce ´fa´ at the beginning of the `icon` value\n```json\n{\n    \"value\":\"init\",\n    \"icon\":\"fa fa-cog fa-spin\"\n}\n```\nfor material icons you can use\n```json\n{\n    \"value\":10,\n    \"icon\":\"perm_scan_wifi\",\n    \"style\":\"color:#cc0000\"\n}\n```\n"},{"id":"f471b319.d8105","type":"function","z":"297abac8.084176","name":"lastSeen","func":"if (msg.hasOwnProperty(\"payload\") && msg.payload.hasOwnProperty(\"command\")) {\n    switch (msg.payload.command) {\n        case \"deleteTable\":\n            context.set(\"lastSeen\",undefined);\n            context.set(\"lastState\",undefined);\n            node.status({fill:\"yellow\",shape:\"dot\",text:\"lastSeen&lastState deleted\"});\n            node.warn(\"[lastSeen] lastSeen&lastState deleted\");\n            return msg;\n    }\n}\n\nif (msg.hasOwnProperty(\"topic\") && (msg.hasOwnProperty(\"state\") || msg.payload.hasOwnProperty(\"command\"))) {\n    var lastSeen = context.get(\"lastSeen\");\n    if (lastSeen===undefined) {\n        lastSeen={};\n        context.set(\"lastSeen\",lastSeen);\n    }\n    var lastState = context.get(\"lastState\");\n    if (lastState===undefined) {\n        lastState={};\n        context.set(\"lastState\",lastState);\n    }\n    \n    var pad = function (num) {\n        return (\"0\"+num).slice(-2);\n    };\n    var formatLastSeen = function(lastSeen){\n        if (lastSeen>0) {\n            var secs = Math.floor((Date.now() - lastSeen) / 1000);\n            var minutes = Math.floor(secs / 60);\n            secs = secs%60;\n            var hours = Math.floor(minutes/60);\n            minutes = minutes%60;\n            var days = Math.floor(hours/24);\n            hours = hours%24;\n            if (days>0) {\n                return days+\"days \"+hours+\"hours ago\";\n            } else if (hours>0) {\n                return pad(hours)+\":\"+pad(minutes)+\" ago\";\n            } else if (minutes>0) {\n                return minutes+\"min ago\";\n            } else {\n                return secs+\"s ago\";\n            }\n        }\n        return \"n/a\";\n    }\n    \n    if (msg.hasOwnProperty(\"state\")) {\n        if (msg.state.hasOwnProperty(\"$state\")) {\n            // do not add timestamp if $status==\"lost\" (this is the LWT form the broker)\n            if (!lastSeen.hasOwnProperty(msg.topic)) lastSeen[msg.topic]={};\n            lastState[msg.topic]=msg.state.$state;\n            \n            if (msg.state.$state===\"lost\"){\n                if (lastSeen.hasOwnProperty(msg.topic)) {\n                    msg.state.lastSeenreadyFormatted=\"lost \"+formatLastSeen(lastSeen[msg.topic].ready);\n                } else {\n                    msg.state.lastSeenreadyFormatted=\"never seen\";\n                }\n            } else {\n                msg.state[\"lastSeen\"+msg.state.$state]=Date.now();\n                msg.state[\"lastSeen\"+msg.state.$state+\"Formatted\"]=formatLastSeen(lastSeen[msg.topic][msg.state.$state]);\n                lastSeen[msg.topic][msg.state.$state]=msg.state[\"lastSeen\"+msg.state.$state];\n            }\n        }\n    } else if (msg.payload.hasOwnProperty(\"command\")) {\n        switch (msg.payload.command) {\n            case \"updateData\":\n                msg.payload.arguments=[[]];\n                for (let topic in lastSeen) {\n                    if (lastSeen.hasOwnProperty(topic)) {\n                        let lineData={\"$topic\":topic};\n                        for (let value in lastSeen[topic]) {\n                            if (lastSeen[topic].hasOwnProperty(value)) {\n                                lineData[\"lastSeen\"+value]=lastSeen[topic][value];\n                                lineData[\"lastSeen\"+value+\"Formatted\"]=formatLastSeen(lastSeen[topic][value]);\n                            }\n                        }\n                        if (lastState[topic]===\"lost\") {\n                            if (lastSeen[topic].hasOwnProperty(\"ready\")) {\n                                lineData[\"lastSeenreadyFormatted\"]=\"lost \"+formatLastSeen(lastSeen[topic].ready); \n                            } else {\n                                lineData[\"lastSeenreadyFormatted\"]=\"never seen\";\n                            }\n                        }\n                        msg.payload.arguments[0].push(lineData);\n                    }\n                }\n                break;\n            default:\n                break;\n        }\n    }\n}\nreturn msg;","outputs":1,"noerr":0,"x":300,"y":489,"wires":[["7e1f9fea.c61b7"]],"icon":"node-red/timer.svg","info":"# build last seen timestamps\n## description\nThis function looks for msg.state.$state messages and add a timestamp (absolute and difference from last occurence)\n## how to use\n- Place this node in your data stream before the `handle tableData` node. The payload must be like this to be activated. Other messages will be passed through\n```\nmsg.payload.state={\n    $name : \"deviceName\",\n    $state : \"anyState\"\n}\n```\n\n- Place a inject node infront with msg.payload\n```json\n{\n    \"command\": \"updateData\",\n    \"column\": \"lastSeen\"\n}\n```\nto get the formatted last seen string updtated the inject node should repead every mnute or so. \n\n### last seen formatted\na formatted string is generated out of the last known timestamp saved in node context and the actual one. The difference between last occurance and the current time is formatted as a human readable string. This ist especially usefull to track `lost` or `sleeping` devices. As this string will change over time even when the value stays constant and is not updated by the mqtt the inject node should trigger every minute.\nThe `lost` state is handeled a little bit different as this is issued by the broker as a LWT (last will topic). in this case the timestamp is irrelevant because it is not issued by the device. The last seen timestamp of the `ready` state is used instead to issue the last time the device is seen. If the device was never seeen in since the start of this flow `never`will be sent.\n\nExample:\n\n- Input:\n```\nmsg.payload.state={\n    $name : \"deviceName\",\n    $state : \"ready\"\n}\n```\n- Output\n```\nmsg.payload.state={\n    $name : \"deviceName\",\n    $state : \"ready\",\n    lastSeenready : unixTimeStamp,\n    lastSeenreadyFormatted : \"01:10 ago\"\n}\n```\n\n### data storage\nNo database is required. Al data is stored in the **node context** on `default` context provider. As all data is **live** and automaticaly rebuild after restart is is not nessesary and not recomended that anything else than `memory Only` is used.\n\n- `lastSeen` _object_ stores all last seen values  to compare against new values to format the human readable string\n- `lastState` _object_ stores all last values of $state in order to handle the special `$state='lost'` "},{"id":"368c3d7a.8e1cc2","type":"inject","z":"297abac8.084176","name":"update","topic":"updateColumn","payload":"{\"command\":\"updateData\",\"column\":\"lastSeen\"}","payloadType":"json","repeat":"60","crontab":"","once":true,"onceDelay":0.1,"x":100,"y":540,"wires":[["f471b319.d8105"]]},{"id":"36d7f9e9.1d55f6","type":"link in","z":"297abac8.084176","name":"Watchdog","links":["57af2d67.f98d04","afb88632.4954f8","d3a34ec2.b2b05","d4eda1a5.1e24a"],"x":68,"y":438,"wires":[["c3793b1.58ca1c8"]]},{"id":"c36f5586.a5b308","type":"link out","z":"297abac8.084176","name":"toTable","links":["56aa7287.24ff8c","465574f9.189c1c"],"x":459,"y":693,"wires":[]},{"id":"5b789b5e.252314","type":"comment","z":"297abac8.084176","name":"Plugins","info":"","x":86,"y":387,"wires":[]},{"id":"e43afcf8.76c17","type":"function","z":"297abac8.084176","name":"resetCounter","func":"if (msg.hasOwnProperty(\"payload\") && msg.payload.hasOwnProperty(\"command\")) {\n    switch (msg.payload.command) {\n        case \"deleteTable\":\n            context.set(\"tableData\",undefined);\n            node.status({fill:\"yellow\",shape:\"dot\",text:\"tableData deleted\"});\n            node.warn(\"[resetCounter] tableData deleted\");\n            return msg;\n    }\n}\nconst pluginName=\"resetCounter\";\nconst triggerProperty=\"uptime\";\n\nvar status = {fill:\"red\",shape:\"dot\",text: \"payload=\"+msg.payload};\n// only trigger if msg.state exits and contains the property $name as a unique identifier\nif (msg.hasOwnProperty(\"state\") && msg.topic!==undefined && msg.topic!==\"\") {\n    status.text=\"device=\";\n    status.text+=(msg.state.$name) ? msg.state.$name : msg.topic;\n    status.fill=\"yellow\";\n    // if the plugin needs to save context data\n    var deviceName = msg.topic;\n    var tableData = context.get(\"tableData\",\"file\");\n    if (tableData===undefined) {\n        tableData={};\n        context.set(\"tableData\",tableData,\"file\");\n    }\n    // if the plugin only reacts on certain values (i.e. uptime)\n    if (msg.state.hasOwnProperty(triggerProperty)) {\n        if (!tableData.hasOwnProperty(deviceName)) {\n            tableData[deviceName]={\n                \"resetTotal\":0,\n                \"totalRuntime\":0\n            }\n        }\n        var tableRow=tableData[deviceName];\n        var success=false;\n        \n        // -------------------------------------------------\n        var dateNow=Date.now();\n        if (msg.state.hasOwnProperty(\"$status\")) {\n            switch (msg.state.$status) {\n                case \"sleeping\":\n                    //tableRow.totalRuntime+=tableRow.lastUptime;\n                    tableRow.lastUptime=0;\n                    status.text=\" sleeping\";\n                    break;\n                case \"lost\":\n                    tableRow.lostSince=dateNow;\n                    break;\n            }\n        }\n        if (tableRow.hasOwnProperty(\"lastUptime\")) {\n            // node.warn([msg.state.uptime,tableRow.lastUptime]);\n            if (Number(msg.state.uptime) < tableRow.lastUptime) { // reset detected!\n                if (tableRow.hasOwnProperty(\"lostSince\")) {\n                    tableRow.resetPeriodLast = tableRow.lostSince-tableRow.resetLast;\n                    delete tableRow.resetLast;\n                    delete tableRow.lostSince;\n                }\n                if (tableRow.hasOwnProperty(\"resetLast\")) {\n                    tableRow.resetPeriodLast = dateNow-tableRow.resetLast;\n                }\n                if (tableRow.resetTotal>0) {\n                    tableRow.resetAverage = Math.floor(tableRow.totalRuntime / tableRow.resetTotal);\n                    msg.state.resetAverage=tableRow.resetAverage;\n                    msg.state.resetTotal=tableRow.resetTotal;\n                    msg.state.resetLast=tableRow.resetLast;\n                    msg.state.totalRuntime=tableRow.totalRuntime;\n                }\n            \n                tableRow.resetLast=dateNow;\n                ++tableRow.resetTotal;\n            } else { // device alive - counting up\n                tableRow.totalRuntime += Number(msg.state.uptime)-tableRow.lastUptime;\n            }\n            tableRow.lastUptime=Number(msg.state.uptime);\n        } else { // first recorded uptime + first seen\n            tableRow.lastUptime=Number(msg.state.uptime);\n            tableRow.totalRuntime=tableRow.lastUptime;\n            if (!tableRow.hasOwnProperty(\"firstSeen\")) {\n                tableRow.firstSeen=dateNow;\n                msg.state.firstSeen=dateNow;\n            }\n        }\n        success=true;\n        // -------------------------------------------------\n        \n        if (success) {\n            if (msg.state.hasOwnProperty(\"resetTotal\")) {\n                status.fill=\"green\"\n                status.text=msg.topic+\" resets=\"+msg.state.resetTotal;\n                node.status(status);\n            }\n        } else {\n            status.error({\"pluginName\":pluginName,triggerProperty:msg.state[triggerProperty],\"state\":msg.state})\n            status.text=\"Error device:\"+msg.topic+\" \"+triggerProperty+\"=\"+msg.state[triggerProperty];\n            node.status(status);           \n        }\n    }\n}\n// always pass the original message (+ additional data as suitable)\n// node.warn([\"reset\",msg.topic])\nreturn msg;","outputs":1,"noerr":0,"x":310,"y":591,"wires":[["27eb9b32.2b5a74"]],"info":"# reset counter\nDetection of device resets. A reset of a device delivering a uptime value can be detected if the delivered uptime value is lower than the value before.\nIf `msg.state.$state==\"lost\"` is detected a timestamp is recorded. if a new `uptime<lastUptime` is detected the recorded \"lost\" timestamp is used insted of `date.now()`\nif `msg.state.$sate==\"sleeping\"` is detected a timestamp is recorded. On next `ready` the lastUptime is set to 0 so the lower `uptime` does not count as a reset.\n\n## context store\n\n`tabledata` in node context. As the totalRuntime should be calculated over flow restart / reset it shoul be saved to persistent memory\n\n## property trigger\n`msg.state.uptime` period between boot and now _in seconds_\n\n## properties used / required\nproperty | required | unique\n-------- | -------- | -------\n`msg.state.$name` | **required** | **unique**\n`msg.state.uptime` | **required** |\n`msg.state.$lost` | **optional** |\n\n\n## values added\nproperty | description | unit\n-------- | ----------- | ----\n`msg.state.resetAverage` | average period between resets | _in ms_\n`msg.state.resetTotal` | total resets detected | _integer_\n`msg.state.resetLast` | last reset detected | _unix timestamp_\n`msg.state.totalRuntime` | total runtime from first detection to now | _in ms_"},{"id":"27eb9b32.2b5a74","type":"function","z":"297abac8.084176","name":"sleepTimer","func":"const pluginName=\"sleepTimer\"; // give the plugin a unique name\nconst triggerProperty=\"$state\"; // if the plugin triggers on one specific property you can specifie it here\nconst contextName=\"tableData\"; // name of context store\n\nif (msg.hasOwnProperty(\"payload\") && msg.payload.hasOwnProperty(\"command\")) {\n    switch (msg.payload.command) {\n        case \"deleteTable\":\n            context.set(contextName,undefined);\n            node.status({fill:\"yellow\",shape:\"dot\",text:contextName+\" deleted\"});\n            node.warn(\"[\"+pluginName+\"] \"+contextName+\"deleted\");\n            return msg;\n    }\n}\n\nvar status = {fill:\"red\",shape:\"dot\",text: \"payload=\"+msg.payload};\n// only trigger if msg.state exitst and contains the property $name as a unique identifier\nif (msg.hasOwnProperty(\"state\") && msg.topic!==undefined && msg.topic!==\"\") {\n    status.text=\"device=\";\n    status.text+=(msg.state.$name) ? msg.state.$name : msg.topic;\n    status.fill=\"yellow\";\n    // if the plugin needs to save context data\n    var deviceName = msg.topic;\n    var tableData = context.get(contextName);\n    if (tableData===undefined) {\n        tableData={};\n        context.set(contextName,tableData);\n    }\n    // if the plugin only reacts on certain values (i.e. uptime)\n    if (msg.state.hasOwnProperty(triggerProperty)) { // add additional triggers here\n        if (!tableData.hasOwnProperty(deviceName)) {\n            if (msg.state[triggerProperty]==='sleeping') { // only activate if device is sleeping once\n                tableData[deviceName]={};\n                msg.state.sleepMode=true;\n            } else {\n                msg.state.sleepMode=false;\n                return msg; // sleepMode not enabled yet\n            }\n        }\n        var tableRow=tableData[deviceName];\n        var success=false;\n        \n        // -------------------------------------------------\n        var dateNow=Date.now();\n        switch (msg.state[triggerProperty]) {\n            case 'sleeping':\n                if (tableRow.lastEvent==='ready' && tableRow.hasOwnProperty('awakeTimestamp')) {\n                    tableRow.awakeTime=Math.floor((dateNow - tableRow.awakeTimestamp)/1000); // in seconds\n                }\n                if (tableRow.lastEvent!=='sleeping') {\n                    tableRow.sleepTimestamp=dateNow;\n                    tableRow.lastEvent='sleeping';\n                }\n                break;\n            case 'ready':\n                if (tableRow.lastEvent==='sleeping' && tableRow.hasOwnProperty('sleepTimestamp')) {\n                    tableRow.sleepTime=Math.floor((dateNow - tableRow.sleepTimestamp)/1000); // in seconds\n                }\n                if (tableRow.lastEvent!=='ready') {\n                    tableRow.awakeTimestamp=dateNow;\n                    tableRow.lastEvent='ready';\n                }\n                break;\n            case 'lost':\n                if (tableRow.lastEvent!=='lost') {\n                    // device went from sleeping to lost\n                    if (tableRow.lastEvent==='sleeping' && tableRow.hasOwnProperty('sleepTimestamp')) {\n                        tableRow.sleepTime=Math.floor((dateNow - tableRow.sleepTimestamp)/1000); // in seconds\n                        delete tableRow.sleepTimestamp;\n                    }\n                    // device went form ready to lost\n                    if (tableRow.lastEvent==='ready' && tableRow.hasOwnProperty('awakeTimestamp')) {\n                        tableRow.awakeTime=Math.floor((dateNow - tableRow.awakeTimestamp)/1000); // in seconds\n                        delete tableRow.awakeTimestamp;\n                    }\n                    tableRow.lastEvent='lost';\n                }\n                break;\n            case 'diconnected':\n                delete tableData[deviceName];\n                status.text+=\" disconnected\";\n                break;\n        }\n        if (tableRow.hasOwnProperty('sleepTime') && tableRow.hasOwnProperty('awakeTime')) {\n            msg.state.sleepRatio=tableRow.awakeTime / tableRow.sleepTime * 100;\n            // msg.state.sleepTime=msg.sleepTime;\n            // msg.state.awakeTime.msg.awakeTime;\n        }\n        success=true;\n        // -------------------------------------------------\n        \n        if (success) {\n            status.fill=\"green\"\n            status.text+=\" \"+triggerProperty+\"=\"+msg.state[triggerProperty];\n            node.status(status);\n        } else {\n            status.error({\"pluginName\":pluginName,triggerProperty:msg.state[triggerProperty],\"state\":msg.state})\n            status.text+=\" Error \"+triggerProperty+\"=\"+msg.state[triggerProperty];\n            node.status(status);           \n        }\n    }\n}\n// allways pass the original message (+ additional data as suitable)\nreturn msg;","outputs":1,"noerr":0,"x":310,"y":642,"wires":[["f3eee260.8bd9b"]],"info":"# sleep timer\nMeasures the sleep and awake time and gives a ratio in %\n\n## context store\n\n`tableData` in node context to store sleep and awake events\n\n## property trigger\n`$state` state changes:\n- `sleeping` begin of sleep period\n- `ready` or `init` begin of awake period\n- `lost` device offline period not added to calculation\n- `diconnected` delete value in tableData\n\n## properties used / required\nproperty | required | unique\n-------- | -------- | -------\n`msg.state.$name` | **required** | **unique**\n\n\n## values added or modified\n\nproperty | modification | description | unit\n-------- | ------------ | ----------- | ----\n`msg.state.sleepMode` | new | device usiong sleep mode | *boolean*\n`msg.state.sleepRatio` | new | percentage of time running | *integer* _in %_\n`msg.state.sleepTime` | optional | time sleeping | *integer* _in seconds_\n`msg.state.awakeTime` | optional | time awake | *integer* _in seconds_"},{"id":"f3eee260.8bd9b","type":"function","z":"297abac8.084176","name":"pluginTemplate","func":"const pluginName=\"pluginTemplate\"; // give the plugin a unique name\nconst triggerProperty=\"uptime\"; // if the plugin triggers on one specific property you can specifie it here\nconst contextName=\"tableData\"; // name of context store\n\nif (msg.hasOwnProperty(\"payload\") && msg.payload.hasOwnProperty(\"command\")) {\n    switch (msg.payload.command) {\n        case \"deleteTable\":\n            context.set(contextName,undefined);\n            node.status({fill:\"yellow\",shape:\"dot\",text:contextName+\" deleted\"});\n            node.warn(\"[\"+pluginName+\"] \"+contextName+\"deleted\");\n            return msg;\n    }\n}\n\nvar status = {fill:\"red\",shape:\"dot\",text: \"payload=\"+msg.payload};\n// only trigger if msg.state exitst and contains the property $name as a unique identifier\nif (msg.hasOwnProperty(\"state\") && msg.topic!==undefined && msg.topic!==\"\") {\n    status.text=\"device=\";\n    status.text+=(msg.state.$name) ? msg.state.$name : msg.topic;\n    status.fill=\"yellow\";\n    // if the plugin needs to save context data\n    var deviceName = msg.topic;\n    var tableData = context.get(contextName);\n    if (tableData===undefined) {\n        tableData={};\n        context.set(contextName,tableData);\n    }\n    // if the plugin only reacts on certain values (i.e. uptime)\n    if (msg.state.hasOwnProperty(triggerProperty)) { // add additional triggers here\n        if (!tableData.hasOwnProperty(deviceName)) tableData[deviceName]={}\n        var tableRow=tableData[deviceName];\n        var success=false;\n        \n        // -------------------------------------------------\n        // place your code here\n        // if success leave with\n        success=true;\n        // -------------------------------------------------\n        \n        if (success) {\n            status.fill=\"green\"\n            status.text+=\" \"+triggerProperty+\"=\"+msg.state[triggerProperty];\n            node.status(status);\n        } else {\n            status.error({\"pluginName\":pluginName,triggerProperty:msg.state[triggerProperty],\"state\":msg.state})\n            status.text+=\" Error \"+triggerProperty+\"=\"+msg.state[triggerProperty];\n            node.status(status);           \n        }\n    }\n}\n// allways pass the original message (+ additional data as suitable)\nreturn msg;","outputs":1,"noerr":0,"x":320,"y":693,"wires":[["c36f5586.a5b308"]],"info":"# plugin template\nYou can use this template to write your own plugin. Please take the time and publish plugins others might like to use.\n\n## context store\n\n`tabledata` in node context. Using memory only (recomended unless usefull)\n\n## property trigger\n`uptime` period between boot and now _in seconds_\n\n## properties used / required\nproperty | required | unique\n-------- | -------- | -------\n`msg.state.$name` | **required** | **unique**\n`msg.state.uptime` | **required** |\n`msg.state.$lost` | **optional** |\n\n\n## values added or modified\nif the plugin modifies existing properties please make sure that the following flow and the table are aware!\nproperty | modification | description | unit\n-------- | ------------ | ----------- | ----\n`msg.state.newProperty` | new | average period between resets | _in ms_\n"},{"id":"c3793b1.58ca1c8","type":"function","z":"297abac8.084176","name":"$state watchdog","func":"// -------------------------------------------------------------------\n// this function provides a timeOut function to emulate the LWT functionality\n// for $state=\"lost\". on every received msg.state.$state it resets the timer\n// if the timer runs out it issues msg.state.$state=\"lost\" and a message to \n// the extra filed msg.state.resetReason\n// can be configured by:\n// msg.state.interval in seconds\n// -------------------------------------------------------------------\n\nif (msg.hasOwnProperty(\"payload\") && msg.payload.hasOwnProperty(\"command\")) {\n    switch (msg.payload.command) {\n        case \"deleteTable\":\n            let lostTimers = context.get(\"lostTimers\") || {};\n            Object.keys(lostTimers).forEach((key,index) => {\n                clearTimeout(lostTimers[key].timer);\n            });\n            context.set(\"lostTimers\",undefined);\n            node.status({fill:\"yellow\",shape:\"dot\",text:\"All timers deleted\"});\n            node.warn(\"[$state watchdog] All timers deleted\");\n            return msg;\n    }\n}\n\nvar timeout=120     // in seconds (set to 0 if you want to disable this feature)\nvar graceTime=60    // give a little extra to avoid false alarms\n\nvar status={fill:\"red\",shape:\"dot\",text:\"\"};\nif (msg.hasOwnProperty(\"state\") && msg.state.hasOwnProperty(\"interval\")) {\n    if (!Number.isNaN(Number(msg.state.interval))) {\n        timeout=Number(msg.state.interval); //*1.5 \n    } else {\n        status.text=\"[$state watchdog] msg.state.interval is NaN\";\n        node.error([status.text,msg]);\n        node.status(status);\n        return msg;\n    }\n}\nvar resetReason=\"device lost! No refresh the last \"+timeout+\"sec\"\n\n// ------------------------------------------------------\n// emulate timeout for $state=\"lost\"\n// ------------------------------------------------------\nfunction mqttTimeout(arg) {\n    arg.node.send(arg.msg);\n}\n    \nif (timeout>0 && msg.hasOwnProperty(\"topic\")) {\n    // we have to keep track on existing timers\n    let lostTimers = context.get(\"lostTimers\"); // allways memoryOnly as the timers do not extist after restart\n    if (lostTimers===undefined) {\n        lostTimers={};\n        context.set(\"lostTimers\",lostTimers);\n    }\n    if (lostTimers.hasOwnProperty(msg.topic)) { // timer exists so clear it first\n        clearTimeout(lostTimers[msg.topic].timer);\n    }\n    if (!lostTimers.hasOwnProperty(msg.topic)) lostTimers[msg.topic]={};\n    lostTimers[msg.topic].timeout=timeout;\n    lostTimers[msg.topic].timer=setTimeout(mqttTimeout+graceTime, timeout*1000, \n        {\n            \"node\":node,\n            \"msg\":{\n                \"topic\":msg.topic,\n                \"state\":{\n                    \"$state\":\"lost\",\n                    \"resetReason\":resetReason\n                }\n                \n            }\n        }\n    );\n    node.status({fill:\"green\",shape:\"dot\",text:msg.topic+\"=\"+timeout+\"s\"});\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":320,"y":438,"wires":[["f471b319.d8105"]],"icon":"node-red/swap.svg","info":"# msg.state.$state watchdog\n## decription\nthis function provides a timeOut function (watchdog) to emulate the LWT functionality\nissueing $state=\"lost\" if a device did not update in time. \non every received msg.state.$state it resets the timer\nif the timer runs out it issues `msg.state.$state=\"lost\"` and a message to \nthe extra filed `msg.state.resetReason`\n\nyou can find more about the [homie convention device lifecyle here](https://homieiot.github.io/specification/#device-lifecycle).\n\n## how to use\n- place it in the main plugin list if you like to have a watchdog for every device with the same timeout\n- place it after a translator / data source if only some devices need a watchdog because they do not supprt mqtt LWT or similar techniques to detect offline devices and set the msg.state.$state correcty over the complete lifecycle.\n- place diffent watchdogs in the aquisition area behind translators if you need **individual timeout durations**.\n- edit the `timeout` variable in the code or\n- send msg.state.interval to set individual timeout by message\n\n## do do / issues\n- have to find out if a clearTimeout / setTimeout on every message is the most efficient way.\n- perhaps own code with one interval timer more efficient for a bigger number of devices\n\n## homie features\n- `$state` *string* current state of the device\n- `interval` *integer* in sec \n\n## extended features\n- `resetReason` *string* description that the device was flaged by the watchdog"},{"id":"628b173b.41a6e8","type":"link in","z":"297abac8.084176","name":"Plugins","links":["8c534b92.0751b8","bce073d8.c8549","60039f.4881ac6","5b06e9af.10c888","8db59659.f89858"],"x":68,"y":489,"wires":[["f471b319.d8105"]]},{"id":"914e3c00.53c228","type":"debug","z":"297abac8.084176","name":"to ui_table handler","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":570,"y":640,"wires":[]},{"id":"219703a5.83163c","type":"ui_table","z":"297abac8.084176","group":"a59b864f.91fef8","name":"","order":2,"width":"19","height":"10","columns":[],"outputs":1,"cts":true,"x":290,"y":820,"wires":[["17ce8038.c25ae"]]},{"id":"2db4913b.ae2d6e","type":"ui_ui_control","z":"297abac8.084176","name":"","events":"all","x":100,"y":900,"wires":[["57441a0e.684814"]]},{"id":"17ce8038.c25ae","type":"switch","z":"297abac8.084176","name":"filter callbacks","property":"$exists(ui_control)","propertyType":"jsonata","rules":[{"t":"false"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":440,"y":820,"wires":[["6a2c4f83.94d73"],["57441a0e.684814","a207f98c.97ea68"]]},{"id":"465574f9.189c1c","type":"link in","z":"297abac8.084176","name":"Table","links":["ba2f2b53.357f48","c7c4ccfa.7acd8","c95ef116.05bd4","c36f5586.a5b308","38e6d3b3.e3cd8c"],"x":195,"y":940,"wires":[["57441a0e.684814"]]},{"id":"57441a0e.684814","type":"subflow:82161188.9f48","z":"297abac8.084176","name":"Tabulator","env":[{"name":"tabulator","value":"{\"customHeight\":18,\"tabulator\":{\"responsiveLayout\":\"collapse\",\"responsiveLayoutCollapseStartOpen\":false,\"index\":\"$topic\",\"layout\":\"fitColumns\",\"movableColumns\":true,\"groupBy\":\"\",\"columns\":[{\"formatter\":\"responsiveCollapse\",\"width\":30,\"minWidth\":30,\"align\":\"center\",\"resizable\":false,\"headerSort\":false,\"frozen\":true,\"title\":\"Expand&nbsp;&nbsp;<i class='fa fa-plus-circle'></i> \",\"field\":\"expand\",\"headerVertical\":\"flip\",\"headerTooltip\":\"click to expand more details\",\"headerContext\":\"function(e,column){ this.send({ui_control:{callback:'headerContext'},position:{\\\"x\\\":e.x,\\\"y\\\":e.y},payload:column._column.field}); e.preventDefault(); }\"},{\"formatterParams\":{\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" </span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\",\"invalidPlaceholder\":\"(unknown)\"},\"title\":\"Epoch time&nbsp;&nbsp;<i class='fa fa-clock-o'></i>\",\"field\":\"$epoch\",\"formatter\":\"function(cell, formatterParams, onRendered){     var pad = function (num) {         return (\\\"0\\\"+num).slice(-2);     };     var secs = Number(cell.getValue());     if (Number.isNaN(secs)) return;     var minutes = Math.floor(secs / 60);     secs = secs%60;     var hours = Math.floor(minutes/60);     minutes = minutes%60;     var days = Math.floor(hours/24);     hours = hours%24;     if (days>0)         return days+\\\"d \\\"+pad(hours)+\\\":\\\"+pad(minutes);     else         return pad(hours)+\\\":\\\"+pad(minutes)+\\\":\\\"+pad(secs); }\",\"width\":75,\"headerVertical\":\"flip\",\"headerTooltip\":\"Epoch time when data received\",\"headerContext\":\"function(e,column){ this.send({ui_control:{callback:'headerContext'},position:{\\\"x\\\":e.x,\\\"y\\\":e.y},payload:column._column.field}); e.preventDefault(); }\"},{\"formatterParams\":{\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" </span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\",\"invalidPlaceholder\":\"(unknown)\"},\"title\":\"Date&nbsp;&nbsp;<i class='fa fa-clock-o'></i>\",\"field\":\"date\",\"width\":75,\"headerVertical\":\"flip\",\"headerTooltip\":\"Date data received\",\"headerContext\":\"function(e,column){ this.send({ui_control:{callback:'headerContext'},position:{\\\"x\\\":e.x,\\\"y\\\":e.y},payload:column._column.field}); e.preventDefault(); }\"},{\"formatterParams\":{\"legend\":\"function (value) { if (value>-150) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" </span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\",\"invalidPlaceholder\":\"(unknown)\"},\"title\":\"Time&nbsp;&nbsp;<i class='fa fa-clock-o'></i>\",\"field\":\"time\",\"width\":75,\"headerVertical\":\"flip\",\"headerTooltip\":\"Time when data received\",\"headerContext\":\"function(e,column){ this.send({ui_control:{callback:'headerContext'},position:{\\\"x\\\":e.x,\\\"y\\\":e.y},payload:column._column.field}); e.preventDefault(); }\"},{\"formatter\":\"function(cell, formatterParams, onRendered) {     var html = cell.getValue(); return html;  }\",\"title\":\"Signal Strength&nbsp;&nbsp;<i class='fa fa-signal fa-rotate-90'></i>\",\"field\":\"rssi\",\"width\":40,\"align\":\"center\",\"frozen\":true,\"headerVertical\":\"flip\",\"headerTooltip\":\"Signal Strength for WiFi device (signalIcon)\",\"headerContext\":\"function(e,column){ this.send({ui_control:{callback:'headerContext'},position:{\\\"x\\\":e.x,\\\"y\\\":e.y},payload:column._column.field}); e.preventDefault(); }\"},{\"title\":\"Location&nbsp;&nbsp;<i class='fa fa-map-marker fa-rotate-90'></i>\",\"field\":\"name\",\"width\":140,\"headerTooltip\":\"Location of the device (room)\",\"tooltip\":true,\"headerVertical\":\"flip\",\"editor\":\"autocomplete\",\"editorParams\":{\"freetext\":true,\"allowEmpty\":true,\"showListOnEmpty\":true,\"values\":true},\"headerContext\":\"function(e,column){ this.send({ui_control:{callback:'headerContext'},position:{\\\"x\\\":e.x,\\\"y\\\":e.y},payload:column._column.field}); e.preventDefault(); }\"},{\"title\":\"Name&nbsp;&nbsp;<i class='fa fa-tag fa-rotate-90'></i>\",\"field\":\"name\",\"width\":140,\"frozen\":true,\"tooltip\":true,\"headerVertical\":\"flip\",\"headerTooltip\":\"Name of the device ($name)\",\"editor\":\"input\",\"headerContext\":\"function(e,column){ this.send({ui_control:{callback:'headerContextNoHide'},position:{\\\"x\\\":e.x,\\\"y\\\":e.y},payload:column._column.field}); e.preventDefault(); }\"},{\"title\":\"Last Update&nbsp;&nbsp;<i class='fa fa-clock-o fa-rotate-90'></i>\",\"field\":\"lastSeenreadyFormatted\",\"width\":80,\"align\":\"center\",\"tooltip\":true,\"headerVertical\":\"flip\",\"headerTooltip\":\"Time since the device was sending $state updates\",\"headerContext\":\"function(e,column){ this.send({ui_control:{callback:'headerContext'},position:{\\\"x\\\":e.x,\\\"y\\\":e.y},payload:column._column.field}); e.preventDefault(); }\"},{\"title\":\"State&nbsp;&nbsp;<i class='fa fa-star-half-o'></i> \",\"field\":\"$state\",\"width\":65,\"align\":\"center\",\"headerVertical\":\"flip\",\"headerTooltip\":\"Current State: init, ready, lost, sleeping, disconnected or alert\",\"headerContext\":\"function(e,column){ this.send({ui_control:{callback:'headerContext'},position:{\\\"x\\\":e.x,\\\"y\\\":e.y},payload:column._column.field}); e.preventDefault(); }\"},{\"title\":\"<i class='fa fa-area-chart'></i> Sensor Values\",\"columns\":[{\"formatterParams\":{\"min\":0,\"max\":5,\"color\":[\"green\",\"orange\",\"red\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" V</span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Voltage&nbsp;&nbsp;<i class='fa fa-thermometer-half'></i>\",\"field\":\"voltage\",\"formatter\":\"progress\",\"width\":70,\"headerVertical\":\"flip\",\"headerTooltip\":\"Device supply voltage\",\"headerContext\":\"function(e,column){ this.send({ui_control:{callback:'headerContext'},position:{\\\"x\\\":e.x,\\\"y\\\":e.y},payload:column._column.field}); e.preventDefault(); }\"},{\"formatterParams\":{\"min\":0,\"max\":100,\"color\":[\"green\",\"orange\",\"red\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" °F</span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Temperature&nbsp;&nbsp;<i class='fa fa-thermometer-half'></i>\",\"field\":\"temperature\",\"formatter\":\"progress\",\"width\":70,\"headerVertical\":\"flip\",\"headerTooltip\":\"Temperature : BME280\",\"headerContext\":\"function(e,column){ this.send({ui_control:{callback:'headerContext'},position:{\\\"x\\\":e.x,\\\"y\\\":e.y},payload:column._column.field}); e.preventDefault(); }\"},{\"formatterParams\":{\"min\":0,\"max\":110,\"color\":[\"green\",\"orange\",\"red\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" %</span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Humidity&nbsp;&nbsp;<i class='fa fa-thermometer-half'></i>\",\"field\":\"humidity\",\"formatter\":\"progress\",\"width\":70,\"headerVertical\":\"flip\",\"headerTooltip\":\"Humidity : BME280\",\"headerContext\":\"function(e,column){ this.send({ui_control:{callback:'headerContext'},position:{\\\"x\\\":e.x,\\\"y\\\":e.y},payload:column._column.field}); e.preventDefault(); }\"},{\"formatterParams\":{\"min\":0,\"max\":1000,\"color\":[\"green\",\"orange\",\"red\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" mb</span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Pressure&nbsp;&nbsp;<i class='fa fa-thermometer-half'></i>\",\"field\":\"pressure\",\"formatter\":\"progress\",\"width\":70,\"headerVertical\":\"flip\",\"headerTooltip\":\"Baromatric Pressure : BME280\",\"headerContext\":\"function(e,column){ this.send({ui_control:{callback:'headerContext'},position:{\\\"x\\\":e.x,\\\"y\\\":e.y},payload:column._column.field}); e.preventDefault(); }\"},{\"formatterParams\":{\"min\":0,\"max\":100,\"color\":[\"green\",\"orange\",\"red\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" </span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Light&nbsp;&nbsp;<i class='fa fa-thermometer-half'></i>\",\"field\":\"light\",\"formatter\":\"progress\",\"width\":70,\"headerVertical\":\"flip\",\"headerTooltip\":\"Light intensity : Photoresistor or APDS9960 or TSL2591 \",\"headerContext\":\"function(e,column){ this.send({ui_control:{callback:'headerContext'},position:{\\\"x\\\":e.x,\\\"y\\\":e.y},payload:column._column.field}); e.preventDefault(); }\"},{\"formatterParams\":{\"min\":0,\"max\":10,\"color\":[\"green\",\"orange\",\"red\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" </span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Door Sensor&nbsp;&nbsp;<i class='fa fa-thermometer-half'></i>\",\"field\":\"open/close\",\"formatter\":\"progress\",\"width\":70,\"headerVertical\":\"flip\",\"headerTooltip\":\"Door Sensor : Magnatic or Mercury switch\",\"headerContext\":\"function(e,column){ this.send({ui_control:{callback:'headerContext'},position:{\\\"x\\\":e.x,\\\"y\\\":e.y},payload:column._column.field}); e.preventDefault(); }\"},{\"formatterParams\":{\"min\":0,\"max\":100,\"color\":[\"green\",\"orange\",\"red\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" </span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Tank Level&nbsp;&nbsp;<i class='fa fa-thermometer-half'></i>\",\"field\":\"level\",\"formatter\":\"progress\",\"width\":70,\"headerVertical\":\"flip\",\"headerTooltip\":\"Tank Level : Distance sensor HC-SR04\",\"headerContext\":\"function(e,column){ this.send({ui_control:{callback:'headerContext'},position:{\\\"x\\\":e.x,\\\"y\\\":e.y},payload:column._column.field}); e.preventDefault(); }\"},{\"formatterParams\":{\"min\":0,\"max\":1,\"color\":[\"green\",\"orange\",\"red\"],\"legend\":\"function (value) { if (value=>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" </span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Presence&nbsp;&nbsp;<i class='fa fa-thermometer-half'></i>\",\"field\":\"presence\",\"formatter\":\"progress\",\"width\":70,\"headerVertical\":\"flip\",\"headerTooltip\":\"Presence Detector : tracking IP or MAC\",\"headerContext\":\"function(e,column){ this.send({ui_control:{callback:'headerContext'},position:{\\\"x\\\":e.x,\\\"y\\\":e.y},payload:column._column.field}); e.preventDefault(); }\"},{\"formatterParams\":{\"min\":0,\"max\":1,\"color\":[\"green\",\"orange\",\"red\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" </span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Motion&nbsp;&nbsp;<i class='fa fa-thermometer-half'></i>\",\"field\":\"motion\",\"formatter\":\"progress\",\"width\":70,\"headerVertical\":\"flip\",\"headerTooltip\":\"Motion Detector : RCWL-0516 or mini PIR Sensor\",\"headerContext\":\"function(e,column){ this.send({ui_control:{callback:'headerContext'},position:{\\\"x\\\":e.x,\\\"y\\\":e.y},payload:column._column.field}); e.preventDefault(); }\"},{\"formatterParams\":{\"min\":0,\"max\":100,\"color\":[\"green\",\"orange\",\"red\"],\"legend\":\"function (value) { if (value=>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" </span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Custom&nbsp;&nbsp;<i class='fa fa-thermometer-half'></i>\",\"field\":\"custom\",\"formatter\":\"progress\",\"width\":70,\"headerVertical\":\"flip\",\"headerTooltip\":\"Custom Sensor\",\"headerContext\":\"function(e,column){ this.send({ui_control:{callback:'headerContext'},position:{\\\"x\\\":e.x,\\\"y\\\":e.y},payload:column._column.field}); e.preventDefault(); }\"}]},{\"title\":\"<i class='fa fa-code'></i>Device Status\",\"columns\":[{\"title\":\"Interval (Minutes)&nbsp;&nbsp;<i class='fa fa-undo'></i>\",\"field\":\"sleeptime\",\"width\":40,\"headerVertical\":\"flip\",\"headerTooltip\":\"Device update interval\",\"headerContext\":\"function(e,column){ this.send({ui_control:{callback:'headerContext'},position:{\\\"x\\\":e.x,\\\"y\\\":e.y},payload:column._column.field}); e.preventDefault(); }\"},{\"formatterParams\":{\"min\":0,\"max\":100,\"color\":[\"green\",\"orange\",\"red\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" </span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"UpTime (Milliseconds)&nbsp;&nbsp;<i class='fa fa-clock-o'></i>\",\"field\":\"uptime\",\"width\":75,\"headerVertical\":\"flip\",\"headerTooltip\":\"Device uptime in milliseconds\",\"headerContext\":\"function(e,column){ this.send({ui_control:{callback:'headerContext'},position:{\\\"x\\\":e.x,\\\"y\\\":e.y},payload:column._column.field}); e.preventDefault(); }\"},{\"formatterParams\":{\"min\":0,\"max\":5,\"color\":[\"red\",\"green\",\"red\"],\"legend\":\"function (value) { if (value=>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" </span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Device Mode&nbsp;&nbsp;<i class='fa fa-plug'></i>\",\"field\":\"mode\",\"formatter\":\"progress\",\"width\":70,\"headerVertical\":\"flip\",\"headerTooltip\":\"Device Mode\",\"headerContext\":\"function(e,column){ this.send({ui_control:{callback:'headerContext'},position:{\\\"x\\\":e.x,\\\"y\\\":e.y},payload:column._column.field}); e.preventDefault(); }\"},{\"formatterParams\":{\"min\":0,\"max\":10,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+(value/1024).toFixed(2)+\\\" kB</span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"right\"},\"title\":\"Memory&nbsp;&nbsp;<i class='fa fa-microchip'></i>\",\"field\":\"memory\",\"formatter\":\"progress\",\"width\":70,\"headerVertical\":\"flip\",\"headerTooltip\":\"Device free heap memory in kb\",\"headerContext\":\"function(e,column){ this.send({ui_control:{callback:'headerContext'},position:{\\\"x\\\":e.x,\\\"y\\\":e.y},payload:column._column.field}); e.preventDefault(); }\"},{\"formatterParams\":{\"min\":0,\"max\":100,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) {     if (value>0)         return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" %</span>\\\";     else         return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"right\"},\"title\":\"CPU Load&nbsp;&nbsp;<i class='fa fa-tasks'></i>\",\"field\":\"cpuload\",\"formatter\":\"progress\",\"width\":70,\"headerVertical\":\"flip\",\"headerTooltip\":\"Device cpu load in %\",\"headerContext\":\"function(e,column){ this.send({ui_control:{callback:'headerContext'},position:{\\\"x\\\":e.x,\\\"y\\\":e.y},payload:column._column.field}); e.preventDefault(); }\"},{\"formatter\":\"link\",\"formatterParams\":{\"labelField\":\"ip\",\"urlPrefix\":\"http://\",\"target\":\"_blank\"},\"title\":\"IP Adress&nbsp;&nbsp;<i class='fa fa-globe'></i>\",\"field\":\"ip\",\"width\":100,\"headerVertical\":\"flip\",\"headerTooltip\":\"Device local IP-Address (ip)\",\"headerContext\":\"function(e,column){ this.send({ui_control:{callback:'headerContext'},position:{\\\"x\\\":e.x,\\\"y\\\":e.y},payload:column._column.field}); e.preventDefault(); }\"},{\"formatterParams\":{\"min\":1,\"max\":11,\"color\":[\"red\",\"green\",\"red\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" </span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Wifi Channel&nbsp;&nbsp;<i class='fa fa-plug'></i>\",\"field\":\"channel\",\"formatter\":\"progress\",\"width\":70,\"headerVertical\":\"flip\",\"headerTooltip\":\"Device WiFi Channel\",\"headerContext\":\"function(e,column){ this.send({ui_control:{callback:'headerContext'},position:{\\\"x\\\":e.x,\\\"y\\\":e.y},payload:column._column.field}); e.preventDefault(); }\"},{\"title\":\"MAC&nbsp;&nbsp;<i class='fa fa-barcode'></i>\",\"field\":\"mac\",\"width\":100,\"headerVertical\":\"flip\",\"headerTooltip\":\"Device mac address (mac)\",\"headerContext\":\"function(e,column){ this.send({ui_control:{callback:'headerContext'},position:{\\\"x\\\":e.x,\\\"y\\\":e.y},payload:column._column.field}); e.preventDefault(); }\"},{\"title\":\"Firmware&nbsp;&nbsp;<i class='fa fa-code'></i>\",\"field\":\"firmware\",\"width\":100,\"headerVertical\":\"flip\",\"headerTooltip\":\"Name of the firmware ($fw/name)\",\"headerContext\":\"function(e,column){ this.send({ui_control:{callback:'headerContext'},position:{\\\"x\\\":e.x,\\\"y\\\":e.y},payload:column._column.field}); e.preventDefault(); }\"},{\"title\":\"Version&nbsp;&nbsp;<i class='fa fa-code-fork'></i>\",\"field\":\"version\",\"width\":100,\"headerVertical\":\"flip\",\"headerTooltip\":\"Version of the firmware ($fw/version)\",\"headerContext\":\"function(e,column){ this.send({ui_control:{callback:'headerContext'},position:{\\\"x\\\":e.x,\\\"y\\\":e.y},payload:column._column.field}); e.preventDefault(); }\"},{\"title\":\"Homie&nbsp;&nbsp;<i class='fa fa-rss-square'></i>\",\"field\":\"$homie\",\"width\":100,\"align\":\"left\",\"headerVertical\":\"flip\",\"headerTooltip\":\"Homie version ($version)\",\"headerContext\":\"function(e,column){ this.send({ui_control:{callback:'headerContext'},position:{\\\"x\\\":e.x,\\\"y\\\":e.y},payload:column._column.field}); e.preventDefault(); }\"},{\"title\":\"Platform&nbsp;&nbsp;<i class='fa fa-microchip'></i>\",\"field\":\"$implementation\",\"width\":100,\"align\":\"left\",\"headerVertical\":\"flip\",\"headerTooltip\":\"Name of the platform ($implementation)\",\"tooltip\":true,\"headerContext\":\"function(e,column){ this.send({ui_control:{callback:'headerContext'},position:{\\\"x\\\":e.x,\\\"y\\\":e.y},payload:column._column.field}); e.preventDefault(); }\"},{\"title\":\"Boot Cause&nbsp;&nbsp;<i class='fa  fa-exclamation-triangle'></i>\",\"field\":\"lastBootCause\",\"width\":100,\"headerVertical\":\"flip\",\"headerTooltip\":\"Last cause of reboot (provided by http json request)\"},{\"title\":\"Reset&nbsp;&nbsp;<i class='fa fa-power-off'></i>\",\"field\":\"resetReason\",\"width\":100,\"headerVertical\":\"flip\",\"headerTooltip\":\"Last reason of reset (provided by http json request)\",\"headerContext\":\"function(e,column){ this.send({ui_control:{callback:'headerContext'},position:{\\\"x\\\":e.x,\\\"y\\\":e.y},payload:column._column.field}); e.preventDefault(); }\"},{\"title\":\"Reset #&nbsp;&nbsp;<i class='fa fa-sort-numeric-asc'>\",\"field\":\"resetTotal\",\"width\":100,\"headerVertical\":\"flip\",\"headerTooltip\":\"Number of resets (provided by resetCounter node)\",\"headerContext\":\"function(e,column){ this.send({ui_control:{callback:'headerContext'},position:{\\\"x\\\":e.x,\\\"y\\\":e.y},payload:column._column.field}); e.preventDefault(); }\"},{\"title\":\"a.uptime&nbsp;&nbsp;<i class='fa fa-clock-o'>\",\"field\":\"resetAverage\",\"width\":100,\"headerVertical\":\"flip\",\"headerTooltip\":\"Average uptime between resets (provided by resetCounter node)\",\"formatter\":\"function(cell, formatterParams, onRendered){     var pad = function (num) {         return (\\\"0\\\"+num).slice(-2);     };     var secs = Number(cell.getValue());     if (Number.isNaN(secs)) return;     var minutes = Math.floor(secs / 60);     secs = secs%60;     var hours = Math.floor(minutes/60);     minutes = minutes%60;     var days = Math.floor(hours/24);     hours = hours%24;     if (days>0)         return days+\\\"d \\\"+pad(hours)+\\\":\\\"+pad(minutes);     else         return pad(hours)+\\\":\\\"+pad(minutes)+\\\":\\\"+pad(secs); }\",\"headerContext\":\"function(e,column){ this.send({ui_control:{callback:'headerContext'},position:{\\\"x\\\":e.x,\\\"y\\\":e.y},payload:column._column.field}); e.preventDefault(); }\"},{\"formatterParams\":{\"min\":0,\"max\":100,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) {     if (value>0)         return \\\"<span style='color:#FFFFFF;'>\\\"+Number(value).toFixed(2)+\\\" %</span>\\\";     else         return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"formatter\":\"progress\",\"title\":\"Sleep %&nbsp;&nbsp;<i class='fa fa-moon-o'></i>\",\"field\":\"sleepRatio\",\"width\":100,\"headerVertical\":\"flip\",\"headerTooltip\":\"Ratio between sleep and awake (provided by sleepTimer node)\",\"headerContext\":\"function(e,column){ this.send({ui_control:{callback:'headerContext'},position:{\\\"x\\\":e.x,\\\"y\\\":e.y},payload:column._column.field}); e.preventDefault(); }\"}]}],\"columnResized\":\"function(column){     var newColumn = {         field: column._column.field,         visible: column._column.visible,         width: column._column.width,         widthFixed: column._column.widthFixed,         widthStyled: column._column.widthStyled     }; this.send({topic:this.config.topic,ui_control:{callback:'columnResized',columnWidths:newColumn}}); }\",\"columnMoved\":\"function(column, columns){     var newColumns=[];     columns.forEach(function (column) {         newColumns.push({'field': column._column.definition.field, 'title': column._column.definition.title});     });     this.send({topic:this.config.topic,ui_control:{callback:'columnMoved',columns:newColumns}}); }\",\"rowFormatter\":\"function(row){     var data = row.getData();     switch (data.$state) {         case \\\"lost\\\":             row.getElement().style.backgroundColor = \\\"#9e2e66\\\";             row.getElement().style.color = \\\"#a6a6a6\\\";             break;         case \\\"sleeping\\\":             row.getElement().style.backgroundColor = \\\"#336699\\\";             break;         case \\\"disconnected\\\":             row.getElement().style.backgroundColor = \\\"#cc3300\\\";             row.getElement().style.color = \\\"#a6a6a6\\\";             break;         case \\\"alert\\\":             row.getElement().style.backgroundColor = \\\"#A6A6DF\\\";             break;         case \\\"init\\\":             row.getElement().style.backgroundColor = \\\"#f2f20d\\\";             break;         case \\\"ready\\\":             row.getElement().style.backgroundColor = \\\"\\\";             row.getElement().style.color = \\\"\\\";             break;         } }\",\"rowContext\":\"function(e, row){     this.send({ui_control:{callback:'rowContext'},position:{\\\"x\\\":e.x,\\\"y\\\":e.y},payload:{\\\"$name\\\":row._row.data.$name,\\\"$localip\\\":row._row.data.$localip,\\\"name\\\":row._row.data.name},\\\"topic\\\":row._row.data.$topic});     e.preventDefault(); }\",\"cellEdited\":\"function(cell){     this.send({ui_control:{callback:'cellEdited'},         payload:cell._cell.value,         \\\"oldValue\\\":cell._cell.oldValue,         \\\"field\\\":cell._cell.column.field,         \\\"$topic\\\":cell._cell.row.data.$topic}); }\"}}","type":"json"},{"name":"tableDataProp","value":"state","type":"str"}],"x":300,"y":900,"wires":[["219703a5.83163c"],["e377d31.0bb953","44384fd0.cd026"]]},{"id":"fc1781da.11b7e","type":"comment","z":"297abac8.084176","name":"ui-tabel","info":"","x":69,"y":790,"wires":[]},{"id":"6a2c4f83.94d73","type":"debug","z":"297abac8.084176","name":"clicked on cell","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":640,"y":780,"wires":[]},{"id":"e377d31.0bb953","type":"link out","z":"297abac8.084176","name":"callbacksOut","links":["67323928.b3b4f8","5e853e0f.ebe8f"],"x":415,"y":940,"wires":[]},{"id":"a207f98c.97ea68","type":"debug","z":"297abac8.084176","name":"table callback","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":640,"y":860,"wires":[]},{"id":"44384fd0.cd026","type":"debug","z":"297abac8.084176","name":"to ui-table","active":false,"tosidebar":true,"console":true,"tostatus":false,"complete":"true","targetType":"full","x":630,"y":900,"wires":[]},{"id":"dcd73c75.f51b","type":"switch","z":"297abac8.084176","name":"callback","property":"ui_control.callback","propertyType":"msg","rules":[{"t":"eq","v":"rowContext","vt":"str"},{"t":"eq","v":"headerContext","vt":"str"},{"t":"eq","v":"cellEdited","vt":"str"},{"t":"eq","v":"columnMoved","vt":"str"},{"t":"eq","v":"columnResized","vt":"str"}],"checkall":"false","repair":false,"outputs":5,"x":120,"y":1120,"wires":[["2484c8f9.152f08"],["cc3c3e74.60c4b"],[],[],[]]},{"id":"3dbfc54b.64358a","type":"switch","z":"297abac8.084176","name":"","property":"payload.command","propertyType":"msg","rules":[{"t":"eq","v":"updateDevice","vt":"str"},{"t":"eq","v":"updateDevices","vt":"str"},{"t":"eq","v":"deleteDevice","vt":"str"},{"t":"eq","v":"ignoreDevice","vt":"str"},{"t":"eq","v":"unIgnoreDevice","vt":"str"},{"t":"eq","v":"refreshTable","vt":"str"},{"t":"eq","v":"deleteTable","vt":"str"},{"t":"eq","v":"columnHide","vt":"str"},{"t":"eq","v":"columnsUnHide","vt":"str"},{"t":"eq","v":"columnUnHide","vt":"str"},{"t":"eq","v":"restoreColumnOrder","vt":"str"},{"t":"eq","v":"resetColumnWidth","vt":"str"},{"t":"eq","v":"setResponsiveLayout","vt":"str"}],"checkall":"false","repair":false,"outputs":13,"x":150,"y":1360,"wires":[["3e72f877.196558"],["3e72f877.196558"],["38e6d3b3.e3cd8c"],["38e6d3b3.e3cd8c"],["38e6d3b3.e3cd8c"],["38e6d3b3.e3cd8c"],["fc959214.8c6ff"],["38e6d3b3.e3cd8c"],["38e6d3b3.e3cd8c"],["38e6d3b3.e3cd8c"],["38e6d3b3.e3cd8c"],["38e6d3b3.e3cd8c"],["38e6d3b3.e3cd8c"]]},{"id":"38e6d3b3.e3cd8c","type":"link out","z":"297abac8.084176","name":"toTable","links":["56aa7287.24ff8c","465574f9.189c1c"],"x":355,"y":1360,"wires":[]},{"id":"3e72f877.196558","type":"link out","z":"297abac8.084176","name":"toAquire","links":["fd22b284.132f5","56377cc8.0ec854"],"x":355,"y":1280,"wires":[]},{"id":"d4eda1a5.1e24a","type":"link out","z":"297abac8.084176","name":"toPlugins","links":["ba428a2.7a3a378","36d7f9e9.1d55f6"],"x":575,"y":1460,"wires":[]},{"id":"215ed798.629798","type":"function","z":"297abac8.084176","name":"rowCommand","func":"// as this feeds back to the beginning of the flow it is time for a new message object\n// otherwise new and old data mix\n// all command data fills into a payload so it would unlikly survice verry long ;)\n\nvar msgOut={};\nswitch (msg.topic){\n    case 'unIgnoreDevice':\n        msgOut={\n            topic:msg.payload,\n            payload:{\n                \"command\":msg.topic,\n                \"object\":msg.payload\n            }\n        };\n        break;\n    case 'deleteTable':\n    case 'updateDevice':\n    case 'deleteDevice':\n    case 'ignoreDevice':\n        msgOut={\n            topic:msg.sourceMsg.topic,\n            socketid:msg.socketid,\n            payload:{\n                \"command\":msg.topic,\n                \"object\":msg.sourceMsg.topic,\n                \"$localip\":msg.sourceMsg.payload.$localip,\n                \"$name\":msg.sourceMsg.payload.$name,\n                \"name\":msg.sourceMsg.payload.name\n            }\n        };\n        break;\n    default:\n        msgOut={\n            topic:msg.sourceMsg.rowData.$topic,\n            payload:{\n                \"command\":msg.topic,\n                \"object\":msg.sourceMsg.$topic,\n                \"$localip\":msg.sourceMsg.payload.$localip,\n                \"$name\":msg.sourceMsg.payload.$name,\n                \"name\":msg.sourceMsg.payload.name,\n            }\n        }\n}\nnode.status({fill:\"green\",shape:\"dot\",text:msgOut.payload.command});\nreturn msgOut;","outputs":1,"noerr":0,"x":480,"y":1040,"wires":[["3dbfc54b.64358a","c87e77d3.e510d8"]]},{"id":"a462dca3.ff3da","type":"function","z":"297abac8.084176","name":"colCommand","func":"// as this feeds back to the beginning of the flow it is time for a new message object\n// otherwise new and old data mix\n// all command data fills into a payload so it would unlikly survice verry long ;)\n\nvar msgOut={\n    topic:\"columnRightClick\",\n    payload:{\n        \"command\":msg.topic,\n        \"object\":msg.payload\n    }\n}\n\n// some commands need the column from the prosition where the context menu was triggered\n\nswitch (msg.topic){\n    case \"columnHide\":\n        msgOut.payload.object=msg.sourceMsg.payload;\n        break;\n}\nnode.status({fill:\"green\",shape:\"dot\",text:msgOut.payload.command});\nreturn msgOut;","outputs":1,"noerr":0,"x":470,"y":1160,"wires":[["3dbfc54b.64358a","7f2d9eb8.998b"]]},{"id":"524819af.965838","type":"ui_context_menu","z":"297abac8.084176","group":"a59b864f.91fef8","order":5,"width":0,"height":-1,"fontSize":16,"position":"msg","outputField":"payload","xCoordinate":"500","yCoordinate":"450","menu":"msg","menuItems":[{"id":"2","icon":"fa-plus-square","label":"unhide all columns","topic":"columnsUnHide","payload":"","payloadType":"str","visible":true,"enabled":true},{"id":"3","icon":"fa-recycle","label":"refresh Table","topic":"refreshTable","payload":"","payloadType":"str","visible":true,"enabled":true},{"id":"4","icon":"fa-table","label":"delete table","topic":"deleteTable","payload":"","payloadType":"str","visible":true,"enabled":true}],"colors":"theme","textColor":"#000000","backgroundColor":"#ffffff","borderColor":"#626262","intervalLength":"2","intervalUnit":"secs","startTimerAtOpen":false,"startTimerAtLeave":true,"stopTimerAtEnter":true,"name":"msgBased","x":290,"y":1160,"wires":[["a462dca3.ff3da"]]},{"id":"cc3c3e74.60c4b","type":"function","z":"297abac8.084176","name":"build column menu","func":"msg.menu=[\n    {\n        \"text\": \"update devices\",\n        \"icon\": \"fa-undo\",\n        \"enabled\": true,\n        \"topic\": \"updateDevices\",\n    },\n    {\n        \"text\": \"---\"\n    },\n    {\n        \"text\": \"hide column\",\n        \"icon\": \"fa-minus-square\",\n        \"enabled\": true,\n        \"topic\": \"columnHide\",\n    },\n    {\n        \"text\": \"unhide column\",\n        \"icon\": \"fa-minus-square-o\",\n        \"enabled\": (msg.hiddenColumns.length>0) ? true : false,\n        \"sub\": msg.hiddenColumns\n    },\n    {\n        \"text\": \"unhide all columns\",\n        \"icon\": \"fa-minus-square\",\n        \"enabled\": true,\n        \"topic\": \"columnsUnHide\",\n    },\n    {\n        \"text\": \"---\"\n    },\n    {\n        \"text\": \"restore column order\",\n        \"icon\": \"fa-sort fa-rotate-90\",\n        \"enabled\": true,\n        \"topic\": \"restoreColumnOrder\"\n    },\n    {\n        \"text\": \"reset column width\",\n        \"icon\": \"fa-arrows-h\",\n        \"enabled\": true,\n        \"topic\": \"resetColumnWidth\"\n    },\n    {\n        \"text\": \"rersponsive layout\",\n        \"icon\": \"fa-mobile\",\n        \"enabled\": true,\n        \"topic\": \"setResponsiveLayout\"\n    },\n    {\n        \"text\": \"refresh table\",\n        \"icon\": \"fa-recycle\",\n        \"enabled\": true,\n        \"topic\": \"refreshTable\"\n    },\n    {\n        \"text\": \"clear table\",\n        \"icon\": \"fa-trash\",\n        \"enabled\": true,\n        \"topic\": \"deleteTable\"\n    }\n];\n\nreturn msg;","outputs":1,"noerr":0,"x":310,"y":1120,"wires":[["524819af.965838","7d146a01.c54684"]]},{"id":"45becbb8.4f87f4","type":"comment","z":"297abac8.084176","name":"callbacks & context menus","info":"","x":130,"y":1000,"wires":[]},{"id":"2484c8f9.152f08","type":"function","z":"297abac8.084176","name":"build row menu","func":"msg.menu=[\n    {\n        \"text\": \"update device\",\n        \"icon\": \"fa-undo\",\n        \"enabled\": true,\n        \"topic\": \"updateDevice\",\n    },\n    {\n        \"text\": \"---\"\n    },\n    {\n        \"text\": \"delete device\",\n        \"icon\": \"fa-trash\",\n        \"enabled\": true,\n        \"topic\": \"deleteDevice\",\n    },\n    {\n        \"text\": \"ignore device\",\n        \"icon\": \"fa-minus-square-o\",\n        \"enabled\": true,\n        \"topic\": \"ignoreDevice\",\n    },\n    {\n        \"text\": \"unignore devices\",\n        \"icon\": \"fa-plus-square-o\",\n        \"enabled\": (msg.ignoredDevices.length>0) ? true : false,\n        \"sub\": msg.ignoredDevices\n    },\n    {\n        \"text\": \"unignore all devices\",\n        \"icon\": \"fa-plus-square\",\n        \"enabled\": true,\n        \"topic\": \"unIgnoreDevices\",\n    },\n    {\n        \"text\": \"---\"\n    },\n    {\n        \"text\": \"refresh table\",\n        \"icon\": \"fa-recycle\",\n        \"enabled\": true,\n        \"topic\": \"refreshTable\"\n    },\n    {\n        \"text\": \"clear table\",\n        \"icon\": \"fa-trash\",\n        \"enabled\": true,\n        \"topic\": \"deleteTable\"\n    }\n];\n\nreturn msg;","outputs":1,"noerr":0,"x":300,"y":1080,"wires":[["7da4ed67.3c4954","8120eb97.d9b818"]]},{"id":"7da4ed67.3c4954","type":"ui_context_menu","z":"297abac8.084176","group":"a59b864f.91fef8","order":2,"width":0,"height":-1,"fontSize":16,"position":"msg","outputField":"payload","xCoordinate":"500","yCoordinate":"450","menu":"msg","menuItems":[{"id":"2","icon":"fa-plus-square","label":"unhide all columns","topic":"columnsUnHide","payload":"","payloadType":"str","visible":true,"enabled":true},{"id":"3","icon":"fa-recycle","label":"refresh Table","topic":"refreshTable","payload":"","payloadType":"str","visible":true,"enabled":true},{"id":"4","icon":"fa-table","label":"delete table","topic":"deleteTable","payload":"","payloadType":"str","visible":true,"enabled":true}],"colors":"theme","textColor":"#000000","backgroundColor":"#ffffff","borderColor":"#626262","intervalLength":"2","intervalUnit":"secs","startTimerAtOpen":false,"startTimerAtLeave":true,"stopTimerAtEnter":true,"name":"msgBased","x":290,"y":1040,"wires":[["215ed798.629798"]]},{"id":"5e853e0f.ebe8f","type":"link in","z":"297abac8.084176","name":"callbacksIn","links":["11c6abc1.9c8b54","e377d31.0bb953"],"x":15,"y":1140,"wires":[["dcd73c75.f51b","40c95bef.f508d4"]]},{"id":"7f2d9eb8.998b","type":"debug","z":"297abac8.084176","name":"colCommand","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":650,"y":1160,"wires":[]},{"id":"c87e77d3.e510d8","type":"debug","z":"297abac8.084176","name":"rowCommand","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":660,"y":1040,"wires":[]},{"id":"40c95bef.f508d4","type":"debug","z":"297abac8.084176","name":"callback","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":120,"y":1180,"wires":[]},{"id":"b618307d.a897e","type":"ui_toast","z":"297abac8.084176","position":"dialog","displayTime":"3","highlight":"","sendall":false,"outputs":1,"ok":"OK","cancel":"Cancel","raw":false,"topic":"","name":"clear table?","x":470,"y":1380,"wires":[["fc959214.8c6ff"]]},{"id":"fc959214.8c6ff","type":"function","z":"297abac8.084176","name":"confirm","func":"var originalMsg = context.get('originalMsg');\nif (msg!==undefined && originalMsg===undefined) {\n    var dialogMsg={\n        payload:\"Do you realy whant to delete the complete table and all statistics. Cell edits and layout will be preserved.\",\n        topic:\"CLEAR TABLE\",\n        socketid:msg.socketid\n    };\n    context.set('originalMsg',msg);\n    return [dialogMsg,null];\n} else {\n    context.set('originalMsg',undefined);\n    if (msg.payload===\"OK\") {\n        return [null,originalMsg];\n    }\n}","outputs":2,"noerr":0,"x":460,"y":1440,"wires":[["b618307d.a897e"],["d4eda1a5.1e24a"]]},{"id":"8120eb97.d9b818","type":"debug","z":"297abac8.084176","name":"rowMenu","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":520,"y":1080,"wires":[]},{"id":"7d146a01.c54684","type":"debug","z":"297abac8.084176","name":"rowMenu","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":520,"y":1120,"wires":[]},{"id":"e7317e5.815dc8","type":"comment","z":"297abac8.084176","name":"Input","info":"","x":90,"y":40,"wires":[]},{"id":"9dd3d71c.45a888","type":"saveflow","z":"297abac8.084176","name":"Save Flow","path":"/home/pi/rpieasy/flows/","enabled":false,"exporttype":"addflow","x":470,"y":40,"wires":[["963f468b.551028"]]},{"id":"4e995f9a.e8e61","type":"inject","z":"297abac8.084176","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":320,"y":40,"wires":[["9dd3d71c.45a888"]]},{"id":"963f468b.551028","type":"debug","z":"297abac8.084176","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":630,"y":40,"wires":[]},{"id":"d5bc2e5d.2b55c","type":"ui_audio","z":"297abac8.084176","name":"Announce","group":"a59b864f.91fef8","voice":"hi-IN","always":true,"x":700,"y":420,"wires":[]},{"id":"768c3882.7597a8","type":"ui_toast","z":"297abac8.084176","position":"top right","displayTime":"3","highlight":"","sendall":true,"outputs":0,"ok":"OK","cancel":"","raw":false,"topic":"","name":"Notify","x":550,"y":420,"wires":[]},{"id":"2e9bcf1c.2874b","type":"ui_template","z":"297abac8.084176","group":"9f15f2e7.e5bb5","name":"RPIEasySettings","order":6,"width":"19","height":"16","format":" \n\n<iframe \nscrolling=\"auto\" \nsrc=\"http://192.168.0.3/config\" \nstyle=\"border: 0px none; \nmargin-left: 0px; \nheight: 1200px; \n//margin-top: -100px; \nwidth: 100%;\">\n</iframe>\n","storeOutMessages":true,"fwdInMessages":true,"templateScope":"local","x":590,"y":520,"wires":[[]]},{"id":"1901b9f.d44d446","type":"ui_template","z":"297abac8.084176","group":"4f79192b.21b748","name":"RPIEasycommand","order":1,"width":"19","height":"1","format":"\n\n<iframe \nscrolling=\"no\" \nsrc=\"http://192.168.0.3/tools\" \nstyle=\"border: 0px none; \nmargin-left: 0px; \nheight: 400px; \nmargin-top:-200px; \nmargin-bottom: 0px; \nwidth: 500px;\">\n</iframe> \n\n","storeOutMessages":true,"fwdInMessages":true,"templateScope":"local","x":590,"y":560,"wires":[[]]},{"id":"e49f3acd.e476e8","type":"ui_template","z":"297abac8.084176","group":"3786b28.f9d5b4e","name":"Camera","order":2,"width":"19","height":"8","format":"<style>\n/*From UV4L  (comment or uncomment .hide on line 28 to show/hide extra content */\n #container {\n                display: flex;\n                flex-flow: row nowrap;\n                align-items: flex-end;\n            }\n            video {\n                background: #eee none repeat scroll 0 0;\n                \n                \n            }\n            .overlayWrapper {\n                position: relative;\n               \n            }\n            .overlayWrapper .overlay {\n                position: absolute;\n                top: 0;\n                left: 5px;\n            }\n            p {\n                margin: 0.125em;\n            }\n            small {\n                font-size: smaller;\n            }\n\n          .hide {\n                display: none;\n            }\n\n/* From Pi_tv_remote.py  */\n\n  .btn {\n  background: #3498db;\n  background-image: -webkit-linear-gradient(top, #3498db, #2980b9);\n  background-image: -moz-linear-gradient(top, #3498db, #2980b9);\n  background-image: -ms-linear-gradient(top, #3498db, #2980b9);\n  background-image: -o-linear-gradient(top, #3498db, #2980b9);\n  background-image: linear-gradient(to bottom, #3498db, #2980b9);\n  -webkit-border-radius: 28;\n  -moz-border-radius: 28;\n  border-radius: 28px;\n  font-family: Arial;\n  color: #ffffff;\n  font-size: 10px;\n  padding: 5px 10px 5px 10px;\n  text-decoration: none;\n  width: 50px;\n}\n.btn:hover {\n  background: #3cb0fd;\n  background-image: -webkit-linear-gradient(top, #3cb0fd, #3498db);\n  background-image: -moz-linear-gradient(top, #3cb0fd, #3498db);\n  background-image: -ms-linear-gradient(top, #3cb0fd, #3498db);\n  background-image: -o-linear-gradient(top, #3cb0fd, #3498db);\n  background-image: linear-gradient(to bottom, #3cb0fd, #3498db);\n  text-decoration: none;\n}\n\n\n\n#joystick-container {\n\n\t\n    display: inline-block;\n}\n#joystick {\n  \n display: flex;\n                flex-flow: row nowrap;\n                align-items: flex-end;\n    margin: 1px;\n    cursor: crosshair;\n}\n\n\n</style>\n\n<script>     \n     /* From UV4L */\n\t \n\t function httpGetAsync(theUrl, callback) {\n                try {\n                    var xmlHttp = new XMLHttpRequest();\n                    xmlHttp.onreadystatechange = function () {\n                        if (xmlHttp.readyState == 4 && xmlHttp.status == 200) {\n                            callback(xmlHttp.responseText);\n                        }\n                    };\n                    xmlHttp.open(\"GET\", theUrl, true); // true for asynchronous\n                    xmlHttp.send(null);\n                } catch (e) {\n                    console.error(e);\n                }\n            }\n\n            function addGyronormScript() {\n                var srcUrl = \"https://rawgit.com/dorukeker/gyronorm.js/master/dist/gyronorm.complete.min.js\"\n                httpGetAsync(srcUrl, function (text) {\n                    var script = document.createElement(\"script\");\n                    script.setAttribute(\"src\", srcUrl);\n                    document.getElementsByTagName(\"head\")[0].appendChild(script);\n                });\n            }\n// TO DO : IP shoud be changed dynamically\n            var signalling_server_hostname = location.hostname || \"10.1.10.40\";\n            var signalling_server_address = signalling_server_hostname + ':' + (location.port || (location.protocol === 'https:' ? 443 : 80));\n            var isFirefox = typeof InstallTrigger !== 'undefined';// Firefox 1.0+\n\n            addEventListener(\"DOMContentLoaded\", function () {\n                document.getElementById('signalling_server').value = signalling_server_address;\n                var cast_not_allowed = !('MediaSource' in window) || location.protocol !== \"https:\";\n                if (cast_not_allowed || !isFirefox) {\n                    if (document.getElementById('cast_tab'))\n                        document.getElementById('cast_tab').disabled = true;\n                    if (cast_not_allowed) { // chrome supports if run with --enable-usermedia-screen-capturing\n                        document.getElementById('cast_screen').disabled = true;\n                    }\n                    document.getElementById('cast_window').disabled = true;\n                    document.getElementById('cast_application').disabled = true;\n                    document.getElementById('note2').style.display = \"none\";\n                    document.getElementById('note4').style.display = \"none\";\n                } else {\n                    document.getElementById('note1').style.display = \"none\";\n                    document.getElementById('note3').style.display = \"none\";\n                }\n                addGyronormScript();\n            });\n\n            var ws = null;\n            var pc;\n            var gn;\n            var datachannel, localdatachannel;\n            var audio_video_stream;\n            var recorder = null;\n            var recordedBlobs;\n            var pcConfig = {\"iceServers\": [\n                    {\"urls\": [\"stun:stun.l.google.com:19302\", \"stun:\" + signalling_server_hostname + \":3478\"]}\n                ]};\n            var pcOptions = {\n                optional: [\n                    // Deprecated:\n                    //{RtpDataChannels: false},\n                    //{DtlsSrtpKeyAgreement: true}\n                ]\n            };\n            var mediaConstraints = {\n                optional: [],\n                mandatory: {\n                    OfferToReceiveAudio: true,\n                    OfferToReceiveVideo: true\n                }\n            };\n            var keys = [];\n            var trickle_ice = true;\n            var remoteDesc = false;\n            var iceCandidates = [];\n\n            RTCPeerConnection = window.RTCPeerConnection || /*window.mozRTCPeerConnection ||*/ window.webkitRTCPeerConnection;\n            RTCSessionDescription = /*window.mozRTCSessionDescription ||*/ window.RTCSessionDescription;\n            RTCIceCandidate = /*window.mozRTCIceCandidate ||*/ window.RTCIceCandidate;\n            navigator.getUserMedia = navigator.getUserMedia || navigator.mozGetUserMedia || navigator.webkitGetUserMedia || navigator.msGetUserMedia;\n            var URL = window.URL || window.webkitURL;\n\n            function createPeerConnection() {\n                try {\n                    var pcConfig_ = pcConfig;\n                    try {\n                        ice_servers = document.getElementById('ice_servers').value;\n                        if (ice_servers) {\n                            pcConfig_.iceServers = JSON.parse(ice_servers);\n                        }\n                    } catch (e) {\n                        alert(e + \"\\nExample: \"\n                                + '\\n[ {\"urls\": \"stun:stun1.example.net\"}, {\"urls\": \"turn:turn.example.org\", \"username\": \"user\", \"credential\": \"myPassword\"} ]'\n                                + \"\\nContinuing with built-in RTCIceServer array\");\n                    }\n                    console.log(JSON.stringify(pcConfig_));\n                    pc = new RTCPeerConnection(pcConfig_, pcOptions);\n                    pc.onicecandidate = onIceCandidate;\n                    if ('ontrack' in pc) {\n                        pc.ontrack = onTrack;\n                    } else {\n                        pc.onaddstream = onRemoteStreamAdded; // deprecated\n                    }\n                    pc.onremovestream = onRemoteStreamRemoved;\n                    pc.ondatachannel = onDataChannel;\n                    console.log(\"peer connection successfully created!\");\n                } catch (e) {\n                    console.error(\"createPeerConnection() failed\");\n                }\n            }\n\n            function onDataChannel(event) {\n                console.log(\"onDataChannel()\");\n                datachannel = event.channel;\n\n                event.channel.onopen = function () {\n                    console.log(\"Data Channel is open!\");\n                    document.getElementById('datachannels').disabled = false;\n                };\n\n                event.channel.onerror = function (error) {\n                    console.error(\"Data Channel Error:\", error);\n                };\n\n                event.channel.onmessage = function (event) {\n                    console.log(\"Got Data Channel Message:\", event.data);\n                    document.getElementById('datareceived').value = event.data;\n                };\n\n                event.channel.onclose = function () {\n                    datachannel = null;\n                    document.getElementById('datachannels').disabled = true;\n                    console.log(\"The Data Channel is Closed\");\n                };\n            }\n\n            function onIceCandidate(event) {\n                if (event.candidate) {\n                    var candidate = {\n                        sdpMLineIndex: event.candidate.sdpMLineIndex,\n                        sdpMid: event.candidate.sdpMid,\n                        candidate: event.candidate.candidate\n                    };\n                    var request = {\n                        what: \"addIceCandidate\",\n                        data: JSON.stringify(candidate)\n                    };\n                    ws.send(JSON.stringify(request));\n                } else {\n                    console.log(\"End of candidates.\");\n                }\n            }\n\n            function addIceCandidates() {\n                iceCandidates.forEach(function (candidate) {\n                    pc.addIceCandidate(candidate,\n                        function () {\n                            console.log(\"IceCandidate added: \" + JSON.stringify(candidate));\n                        },\n                        function (error) {\n                            console.error(\"addIceCandidate error: \" + error);\n                        }\n                    );\n                });\n                iceCandidates = [];\n            }\n\n            function onRemoteStreamAdded(event) {\n                console.log(\"Remote stream added:\", URL.createObjectURL(event.stream));\n                var remoteVideoElement = document.getElementById('remote-video');\n                remoteVideoElement.src = URL.createObjectURL(event.stream);\n                remoteVideoElement.play();\n            }\n\n            function onTrack(event) {\n                console.log(\"Remote track!\");\n                var remoteVideoElement = document.getElementById('remote-video');\n                remoteVideoElement.srcObject = event.streams[0];\n                remoteVideoElement.play();\n            }\n\n            function onRemoteStreamRemoved(event) {\n                var remoteVideoElement = document.getElementById('remote-video');\n                remoteVideoElement.srcObject = null;\n                remoteVideoElement.src = ''; // TODO: remove\n            }\n\n            function start() {\n                if (\"WebSocket\" in window) {\n                    document.getElementById(\"stop\").disabled = true;\n                    document.getElementById(\"start\").disabled = false;\n                    document.documentElement.style.cursor = 'wait';\n                    var server = document.getElementById(\"signalling_server\").value.toLowerCase();\n\n                    var protocol = location.protocol === \"http:\" ? \"ws:\" : \"ws:\";\n                    ws = new WebSocket(protocol + '//' + signalling_server_hostname + ':8090' + '/stream/webrtc');\n\n                    function call(stream) {\n                        iceCandidates = [];\n                        remoteDesc = false;\n                        createPeerConnection();\n                        if (stream) {\n                            pc.addStream(stream);\n                        }\n                        var request = {\n                            what: \"call\",\n                            options: {\n                                force_hw_vcodec: document.getElementById(\"remote_hw_vcodec\").checked,\n                                vformat: document.getElementById(\"remote_vformat\").value,\n                                trickle_ice: trickleice_selection()\n                            }\n                        };\n                        ws.send(JSON.stringify(request));\n                        console.log(\"call(), request=\" + JSON.stringify(request));\n                    }\n\n                    ws.onopen = function () {\n                        console.log(\"onopen()\");\n\n                        audio_video_stream = null;\n                        var cast_mic = document.getElementById(\"cast_mic\").checked;\n                        var cast_tab = document.getElementById(\"cast_tab\") ? document.getElementById(\"cast_tab\").checked : false;\n                        var cast_camera = document.getElementById(\"cast_camera\").checked;\n                        var cast_screen = document.getElementById(\"cast_screen\").checked;\n                        var cast_window = document.getElementById(\"cast_window\").checked;\n                        var cast_application = document.getElementById(\"cast_application\").checked;\n                        var echo_cancellation = document.getElementById(\"echo_cancellation\").checked;\n                        var localConstraints = {};\n                        if (cast_mic) {\n                            if (echo_cancellation)\n                                localConstraints['audio'] = isFirefox ? {echoCancellation: true} : {optional: [{echoCancellation: true}]};\n                            else\n                                localConstraints['audio'] = isFirefox ? {echoCancellation: false} : {optional: [{echoCancellation: false}]};\n                        } else if (cast_tab) {\n                            localConstraints['audio'] = {mediaSource: \"audioCapture\"};\n                        } else {\n                            localConstraints['audio'] = false;\n                        }\n                        if (cast_camera) {\n                            localConstraints['video'] = true;\n                        } else if (cast_screen) {\n                            if (isFirefox) {\n                                localConstraints['video'] = {frameRate: {ideal: 30, max: 30},\n                                    //width: {min: 640, max: 960},\n                                    //height: {min: 480, max: 720},\n                                    mozMediaSource: \"screen\",\n                                    mediaSource: \"screen\"};\n                            } else {\n                                // chrome://flags#enable-usermedia-screen-capturing\n                                document.getElementById(\"cast_mic\").checked = false;\n                                localConstraints['audio'] = false; // mandatory for chrome\n                                localConstraints['video'] = {'mandatory': {'chromeMediaSource':'screen'}};\n                            }\n                        } else if (cast_window)\n                            localConstraints['video'] = {frameRate: {ideal: 30, max: 30},\n                                //width: {min: 640, max: 960},\n                                //height: {min: 480, max: 720},\n                                mozMediaSource: \"window\",\n                                mediaSource: \"window\"};\n                        else if (cast_application)\n                            localConstraints['video'] = {frameRate: {ideal: 30, max: 30},\n                                //width: {min: 640, max: 960},\n                                //height:  {min: 480, max: 720},\n                                mozMediaSource: \"application\",\n                                mediaSource: \"application\"};\n                        else\n                            localConstraints['video'] = false;\n\n                        var localVideoElement = document.getElementById('local-video');\n                        if (localConstraints.audio || localConstraints.video) {\n                            if (navigator.getUserMedia) {\n                                navigator.getUserMedia(localConstraints, function (stream) {\n                                    audio_video_stream = stream;\n                                    call(stream);\n                                    localVideoElement.muted = true;\n                                    //localVideoElement.src = URL.createObjectURL(stream); // deprecated\n                                    localVideoElement.srcObject = stream;\n                                    localVideoElement.play();\n                                }, function (error) {\n                                    stop();\n                                    alert(\"An error has occurred. Check media device, permissions on media and origin.\");\n                                    console.error(error);\n                                });\n                            } else {\n                                console.log(\"getUserMedia not supported\");\n                            }\n                        } else {\n                            call();\n                        }\n                    };\n\n                    ws.onmessage = function (evt) {\n                        var msg = JSON.parse(evt.data);\n                        if (msg.what !== 'undefined') {\n                            var what = msg.what;\n                            var data = msg.data;\n                        }\n                        //console.log(\"message=\" + msg);\n                        console.log(\"message =\" + what);\n\n                        switch (what) {\n                            case \"offer\":\n                                pc.setRemoteDescription(new RTCSessionDescription(JSON.parse(data)),\n                                        function onRemoteSdpSuccess() {\n                                            remoteDesc = true;\n                                            addIceCandidates();\n                                            console.log('onRemoteSdpSucces()');\n                                            pc.createAnswer(function (sessionDescription) {\n                                                pc.setLocalDescription(sessionDescription);\n                                                var request = {\n                                                    what: \"answer\",\n                                                    data: JSON.stringify(sessionDescription)\n                                                };\n                                                ws.send(JSON.stringify(request));\n                                                console.log(request);\n\n                                            }, function (error) {\n                                                alert(\"Failed to createAnswer: \" + error);\n\n                                            }, mediaConstraints);\n                                        },\n                                        function onRemoteSdpError(event) {\n                                            alert('Failed to set remote description (unsupported codec on this browser?): ' + event);\n                                            stop();\n                                        }\n                                );\n\n                                /*\n                                 * No longer needed, it's implicit in \"call\"\n                                var request = {\n                                    what: \"generateIceCandidates\"\n                                };\n                                console.log(request);\n                                ws.send(JSON.stringify(request));\n                                */\n                                break;\n\n                            case \"answer\":\n                                break;\n\n                            case \"message\":\n                                alert(msg.data);\n                                break;\n\n                            case \"iceCandidate\": // when trickle is enabled\n                                if (!msg.data) {\n                                    console.log(\"Ice Gathering Complete\");\n                                    break;\n                                }\n                                var elt = JSON.parse(msg.data);\n                                let candidate = new RTCIceCandidate({sdpMLineIndex: elt.sdpMLineIndex, candidate: elt.candidate});\n                                iceCandidates.push(candidate);\n                                if (remoteDesc)\n                                    addIceCandidates();\n                                document.documentElement.style.cursor = 'default';\n                                break;\n\n                            case \"iceCandidates\": // when trickle ice is not enabled\n                                var candidates = JSON.parse(msg.data);\n                                for (var i = 0; candidates && i < candidates.length; i++) {\n                                    var elt = candidates[i];\n                                    let candidate = new RTCIceCandidate({sdpMLineIndex: elt.sdpMLineIndex, candidate: elt.candidate});\n                                    iceCandidates.push(candidate);\n                                }\n                                if (remoteDesc)\n                                    addIceCandidates();\n                                document.documentElement.style.cursor = 'default';\n                                break;\n                        }\n                    };\n\n                    ws.onclose = function (evt) {\n                        if (pc) {\n                            pc.close();\n                            pc = null;\n                        }\n                        document.getElementById(\"stop\").disabled = false;\n                        document.getElementById(\"start\").disabled = true;\n                        document.documentElement.style.cursor = 'default';\n                    };\n\n                    ws.onerror = function (evt) {\n                        alert(\"An error has occurred!\");\n                        ws.close();\n                    };\n\n                } else {\n                    alert(\"Sorry, this browser does not support WebSockets.\");\n                }\n            }\n\n            function stop() {\n                if (datachannel) {\n                    console.log(\"closing data channels\");\n                    datachannel.close();\n                    datachannel = null;\n                    document.getElementById('datachannels').disabled = true;\n                }\n                if (localdatachannel) {\n                    console.log(\"closing local data channels\");\n                    localdatachannel.close();\n                    localdatachannel = null;\n                }\n                if (audio_video_stream) {\n                    try {\n                        if (audio_video_stream.getVideoTracks().length)\n                            audio_video_stream.getVideoTracks()[0].stop();\n                        if (audio_video_stream.getAudioTracks().length)\n                            audio_video_stream.getAudioTracks()[0].stop();\n                        audio_video_stream.stop(); // deprecated\n                    } catch (e) {\n                        for (var i = 0; i < audio_video_stream.getTracks().length; i++)\n                            audio_video_stream.getTracks()[i].stop();\n                    }\n                    audio_video_stream = null;\n                }\n                stop_record();\n                document.getElementById('remote-video').srcObject = null;\n                document.getElementById('local-video').srcObject = null;\n                document.getElementById('remote-video').src = ''; // TODO; remove\n                document.getElementById('local-video').src = ''; // TODO: remove\n                if (pc) {\n                    pc.close();\n                    pc = null;\n                }\n                if (ws) {\n                    ws.close();\n                    ws = null;\n                }\n                document.getElementById(\"stop\").disabled = true;\n                document.getElementById(\"start\").disabled = false;\n                document.documentElement.style.cursor = 'default';\n            }\n\n            function mute() {\n                var remoteVideo = document.getElementById(\"remote-video\");\n                remoteVideo.muted = !remoteVideo.muted;\n            }\n\n            function pause() {\n                var remoteVideo = document.getElementById(\"remote-video\");\n                if (remoteVideo.paused)\n                    remoteVideo.play();\n                else\n                    remoteVideo.pause();\n            }\n\n            function fullscreen() {\n                var remoteVideo = document.getElementById(\"remote-video\");\n                if (remoteVideo.requestFullScreen) {\n                    remoteVideo.requestFullScreen();\n                } else if (remoteVideo.webkitRequestFullScreen) {\n                    remoteVideo.webkitRequestFullScreen();\n                } else if (remoteVideo.mozRequestFullScreen) {\n                    remoteVideo.mozRequestFullScreen();\n                }\n            }\n\n            function handleDataAvailable(event) {\n                //console.log(event);\n                if (event.data && event.data.size > 0) {\n                    recordedBlobs.push(event.data);\n                }\n            }\n\n            function handleStop(event) {\n                console.log('Recorder stopped: ', event);\n                document.getElementById('record').innerHTML = 'Start Recording';\n                recorder = null;\n                var superBuffer = new Blob(recordedBlobs, {type: 'video/webm'});\n                var recordedVideoElement = document.getElementById('recorded-video');\n                recordedVideoElement.src = URL.createObjectURL(superBuffer);\n            }\n\n            function discard_recording() {\n                var recordedVideoElement = document.getElementById('recorded-video');\n                recordedVideoElement.srcObject = null;\n                recordedVideoElement.src = '';\n            }\n\n            function stop_record() {\n                if (recorder) {\n                    recorder.stop();\n                    console.log(\"recording stopped\");\n                    document.getElementById('record-detail').open = true;\n                }\n            }\n\n            function startRecording(stream) {\n                recordedBlobs = [];\n                var options = {mimeType: 'video/webm;codecs=vp9'};\n                if (!MediaRecorder.isTypeSupported(options.mimeType)) {\n                    console.log(options.mimeType + ' is not Supported');\n                    options = {mimeType: 'video/webm;codecs=vp8'};\n                    if (!MediaRecorder.isTypeSupported(options.mimeType)) {\n                        console.log(options.mimeType + ' is not Supported');\n                        options = {mimeType: 'video/webm;codecs=h264'};\n                        if (!MediaRecorder.isTypeSupported(options.mimeType)) {\n                            console.log(options.mimeType + ' is not Supported');\n                            options = {mimeType: 'video/webm'};\n                            if (!MediaRecorder.isTypeSupported(options.mimeType)) {\n                                console.log(options.mimeType + ' is not Supported');\n                                options = {mimeType: ''};\n                            }\n                        }\n                    }\n                }\n                try {\n                    recorder = new MediaRecorder(stream, options);\n                } catch (e) {\n                    console.error('Exception while creating MediaRecorder: ' + e);\n                    alert('Exception while creating MediaRecorder: ' + e + '. mimeType: ' + options.mimeType);\n                    return;\n                }\n                console.log('Created MediaRecorder', recorder, 'with options', options);\n                //recorder.ignoreMutedMedia = true;\n                recorder.onstop = handleStop;\n                recorder.ondataavailable = handleDataAvailable;\n                recorder.onwarning = function (e) {\n                    console.log('Warning: ' + e);\n                };\n                recorder.start();\n                console.log('MediaRecorder started', recorder);\n            }\n\n            function start_stop_record() {\n                if (pc && !recorder) {\n                    var streams = pc.getRemoteStreams();\n                    if (streams.length) {\n                        console.log(\"starting recording\");\n                        startRecording(streams[0]);\n                        document.getElementById('record').innerHTML = 'Stop Recording';\n                    }\n                } else {\n                    stop_record();\n                }\n            }\n\n            function download() {\n                if (recordedBlobs !== undefined) {\n                    var blob = new Blob(recordedBlobs, {type: 'video/webm'});\n                    var url = window.URL.createObjectURL(blob);\n                    var a = document.createElement('a');\n                    a.style.display = 'none';\n                    a.href = url;\n                    a.download = 'video.webm';\n                    document.body.appendChild(a);\n                    a.click();\n                    setTimeout(function () {\n                        document.body.removeChild(a);\n                        window.URL.revokeObjectURL(url);\n                    }, 100);\n                }\n            }\n\n            function remote_hw_vcodec_selection() {\n                if (!document.getElementById('remote_hw_vcodec').checked)\n                    unselect_remote_hw_vcodec();\n                else\n                    select_remote_hw_vcodec();\n            }\n\n            function remote_hw_vcodec_format_selection() {\n                if (document.getElementById('remote_hw_vcodec').checked)\n                    remote_hw_vcodec_selection();\n            }\n\n            function select_remote_hw_vcodec() {\n                document.getElementById('remote_hw_vcodec').checked = true;\n                var vformat = document.getElementById('remote_vformat').value;\n                switch (vformat) {\n                    case '5':\n                        document.getElementById('remote-video').style.width = \"320px\";\n                        document.getElementById('remote-video').style.height = \"240px\";\n                        break;\n                    case '10':\n                        document.getElementById('remote-video').style.width = \"320px\";\n                        document.getElementById('remote-video').style.height = \"240px\";\n                        break;\n                    case '20':\n                        document.getElementById('remote-video').style.width = \"352px\";\n                        document.getElementById('remote-video').style.height = \"288px\";\n                        break;\n                    case '25':\n                        document.getElementById('remote-video').style.width = \"640px\";\n                        document.getElementById('remote-video').style.height = \"480px\";\n                        break;\n                    case '30':\n                        document.getElementById('remote-video').style.width = \"640px\";\n                        document.getElementById('remote-video').style.height = \"480px\";\n                        break;\n                    case '35':\n                        document.getElementById('remote-video').style.width = \"800px\";\n                        document.getElementById('remote-video').style.height = \"480px\";\n                        break;\n                    case '40':\n                        document.getElementById('remote-video').style.width = \"960px\";\n                        document.getElementById('remote-video').style.height = \"720px\";\n                        break;\n                    case '50':\n                        document.getElementById('remote-video').style.width = \"1024px\";\n                        document.getElementById('remote-video').style.height = \"768px\";\n                        break;\n                    case '55':\n                        document.getElementById('remote-video').style.width = \"1280px\";\n                        document.getElementById('remote-video').style.height = \"720px\";\n                        break;\n                    case '60':\n                        document.getElementById('remote-video').style.width = \"1280px\";\n                        document.getElementById('remote-video').style.height = \"720px\";\n                        break;\n                    case '63':\n                        document.getElementById('remote-video').style.width = \"1280px\";\n                        document.getElementById('remote-video').style.height = \"720px\";\n                        break;\n                    case '65':\n                        document.getElementById('remote-video').style.width = \"1280px\";\n                        document.getElementById('remote-video').style.height = \"768px\";\n                        break;\n                    case '70':\n                        document.getElementById('remote-video').style.width = \"1280px\";\n                        document.getElementById('remote-video').style.height = \"768px\";\n                        break;\n                    case '80':\n                        document.getElementById('remote-video').style.width = \"1280px\";\n                        document.getElementById('remote-video').style.height = \"960px\";\n                        break;\n                    case '90':\n                        document.getElementById('remote-video').style.width = \"1600px\";\n                        document.getElementById('remote-video').style.height = \"768px\";\n                        break;\n                    case '95':\n                        document.getElementById('remote-video').style.width = \"1640px\";\n                        document.getElementById('remote-video').style.height = \"1232px\";\n                        break;\n                    case '97':\n                        document.getElementById('remote-video').style.width = \"1640px\";\n                        document.getElementById('remote-video').style.height = \"1232px\";\n                        break;\n                    case '100':\n                        document.getElementById('remote-video').style.width = \"1920px\";\n                        document.getElementById('remote-video').style.height = \"1080px\";\n                        break;\n                    case '105':\n                        document.getElementById('remote-video').style.width = \"1920px\";\n                        document.getElementById('remote-video').style.height = \"1080px\";\n                        break;\n                    default:\n                        document.getElementById('remote-video').style.width = \"1280px\";\n                        document.getElementById('remote-video').style.height = \"720px\";\n                }\n                /*\n                 // Disable video casting. Not supported at the moment with hw codecs.\n                 var elements = document.getElementsByName('video_cast');\n                 for(var i = 0; i < elements.length; i++) {\n                 elements[i].checked = false;\n                 }\n                 */\n            }\n\n            function unselect_remote_hw_vcodec() {\n                document.getElementById('remote_hw_vcodec').checked = false;\n                document.getElementById('remote-video').style.width = \"640px\";\n                document.getElementById('remote-video').style.height = \"480px\";\n            }\n\n            function singleselection(name, id) {\n                var old = document.getElementById(id).checked;\n                var elements = document.getElementsByName(name);\n                for (var i = 0; i < elements.length; i++) {\n                    elements[i].checked = false;\n                }\n                document.getElementById(id).checked = old ? true : false;\n                /*\n                 // Disable video hw codec. Not supported at the moment when casting.\n                 if (name === 'video_cast') {\n                 unselect_remote_hw_vcodec();\n                 }\n                 */\n            }\n\n            function send_message() {\n                var msg = document.getElementById('datamessage').value;\n                datachannel.send(msg);\n                console.log(\"message sent: \", msg);\n            }\n\n            function create_localdatachannel() {\n                if (pc && localdatachannel)\n                    return;\n                localdatachannel = pc.createDataChannel('datachannel');\n                localdatachannel.onopen = function(event) {\n                    if (localdatachannel.readyState === \"open\") {\n                        localdatachannel.send(\"datachannel created!\");\n                    }\n                };\n                console.log(\"data channel created\");\n            }\n\n            function close_localdatachannel() {\n                if (localdatachannel) {\n                    localdatachannel.close();\n                    localdatachannel = null;\n                }\n                console.log(\"local data channel closed\");\n            }\n\n            function handleOrientation(event) {\n                var data = {\n                    \"do\": {\n                        \"alpha\": event.alpha.toFixed(1), // In degree in the range [0,360]\n                        \"beta\": event.beta.toFixed(1), // In degree in the range [-180,180]\n                        \"gamma\": event.gamma.toFixed(1), // In degree in the range [-90,90]\n                        \"absolute\": event.absolute\n                    }\n                };\n                if (datachannel)\n                    datachannel.send(JSON.stringify(data));\n            }\n\n            function isGyronormPresent() {\n                var url = \"gyronorm.complete.min.js\";\n                var scripts = document.getElementsByTagName('script');\n                for (var i = scripts.length; i--; ) {\n                    if (scripts[i].src.indexOf(url) > -1)\n                        return true;\n                }\n                return false;\n            }\n\n            function handleGyronorm(data) {\n                // Process:\n                // data.do.alpha    ( deviceorientation event alpha value )\n                // data.do.beta     ( deviceorientation event beta value )\n                // data.do.gamma    ( deviceorientation event gamma value )\n                // data.do.absolute ( deviceorientation event absolute value )\n\n                // data.dm.x        ( devicemotion event acceleration x value )\n                // data.dm.y        ( devicemotion event acceleration y value )\n                // data.dm.z        ( devicemotion event acceleration z value )\n\n                // data.dm.gx       ( devicemotion event accelerationIncludingGravity x value )\n                // data.dm.gy       ( devicemotion event accelerationIncludingGravity y value )\n                // data.dm.gz       ( devicemotion event accelerationIncludingGravity z value )\n\n                // data.dm.alpha    ( devicemotion event rotationRate alpha value )\n                // data.dm.beta     ( devicemotion event rotationRate beta value )\n                // data.dm.gamma    ( devicemotion event rotationRate gamma value )\n                if (datachannel && document.getElementById('orientationsend').checked)\n                    datachannel.send(JSON.stringify(data));\n            }\n\n            function orientationsend_selection() {\n                if (document.getElementById('orientationsend').checked) {\n                    if (isGyronormPresent()) {\n                        console.log(\"gyronorm.js library found!\");\n                        if (gn) {\n                            gn.setHeadDirection();\n                            return;\n                        }\n                        try {\n                            gn = new GyroNorm();\n                        } catch (e) {\n                            console.log(e);\n                            document.getElementById('orientationsend').checked = false;\n                            return;\n                        }\n                        var args = {\n                            frequency: 60, // ( How often the object sends the values - milliseconds )\n                            gravityNormalized: true, // ( If the gravity related values to be normalized )\n                            orientationBase: GyroNorm.GAME, // ( Can be GyroNorm.GAME or GyroNorm.WORLD. gn.GAME returns orientation values with respect to the head direction of the device. gn.WORLD returns the orientation values with respect to the actual north direction of the world. )\n                            decimalCount: 1, // ( How many digits after the decimal point will there be in the return values )\n                            logger: null, // ( Function to be called to log messages from gyronorm.js )\n                            screenAdjusted: false            // ( If set to true it will return screen adjusted values. )\n                        };\n                        gn.init(args).then(function () {\n                            gn.start(handleGyronorm);\n                            gn.setHeadDirection(); // only with gn.GAME\n                        }).catch(function (e) {\n                            console.log(\"DeviceOrientation or DeviceMotion might not be supported by this browser or device\");\n                        });\n                    }\n                    if (!gn) {\n                        window.addEventListener('deviceorientation', handleOrientation, true);\n                        console.log(\"gyronorm.js library not found, using defaults\");\n                    }\n                } else {\n                    if (!gn) {\n                        window.removeEventListener('deviceorientation', handleOrientation, true);\n                    }\n                }\n            }\n\n            function getKeycodesArray(arr) {\n                var newArr = new Array();\n                for (var i = 0; i < arr.length; i++) {\n                    if (typeof arr[i] == \"number\") {\n                        newArr[newArr.length] = arr[i];\n                    }\n                }\n                return newArr;\n            }\n\n            function convertKeycodes(arr) {\n                var map = {\n                    /*Space*/ 32: 57,\n                    /*Enter*/13: 28,\n                    /*Tab*/ 9: 15,\n                    /*Esc*/27: 1,\n                    /*Backspace*/8: 14,\n                    /*Shift*/16: 42,\n                    /*Control*/ 17: 29,\n                    /*Alt Left*/ 18: 56,\n                    /*Alt Right*/ 225: 100,\n                    /*Caps Lock*/ 20: 58,\n                    /*Num Lock*/ 144: 69,\n                    /*a*/ 65: 30,\n                    /*b*/ 66: 48,\n                    /*c*/ 67: 46,\n                    /*d*/ 68: 32,\n                    /*e*/ 69: 18,\n                    /*f*/ 70: 33,\n                    /*g*/ 71: 34,\n                    /*h*/ 72: 35,\n                    /*i*/ 73: 23,\n                    /*j*/ 74: 36,\n                    /*k*/ 75: 37,\n                    /*l*/ 76: 38,\n                    /*m*/ 77: 50,\n                    /*n*/ 78: 49,\n                    /*o*/ 79: 24,\n                    /*p*/ 80: 25,\n                    /*q*/ 81: 16,\n                    /*r*/ 82: 19,\n                    /*s*/ 83: 31,\n                    /*t*/ 84: 20,\n                    /*u*/ 85: 22,\n                    /*v*/ 86: 47,\n                    /*w*/ 87: 17,\n                    /*x*/ 88: 45,\n                    /*y*/ 89: 21,\n                    /*z*/ 90: 44,\n                    /*1*/ 49: 2,\n                    /*2*/ 50: 3,\n                    /*3*/ 51: 4,\n                    /*4*/ 52: 5,\n                    /*5*/ 53: 6,\n                    /*6*/ 54: 7,\n                    /*7*/ 55: 8,\n                    /*8*/ 56: 9,\n                    /*9*/ 57: 10,\n                    /*0*/ 48: 11,\n                    /*; (firefox)*/ 59: 39,\n                    /*; (chrome)*/ 186: 39,\n                    /*=(firefox)*/ 61: 13,\n                    /*=(chrome)*/ 187: 13,\n                    /*,*/ 188: 51,\n                    /*-(minus in firefox)*/ 173: 12,\n                    /*-(dash in chrome)*/ 189: 12,\n                    /*.*/ 190: 52,\n                    /*/*/ 191: 53,\n                    /*`*/ 192: 41,\n                    /*{*/ 219: 26,\n                    /*\\*/ 220: 43,\n                    /*}*/ 221: 27,\n                    /*'*/ 222: 40,\n                    /*left-arrow*/ 37: 105,\n                    /*up-arrow*/ 38: 103,\n                    /*right-arrow*/ 39: 106,\n                    /*down-arrow*/ 40: 108,\n                    /*Insert*/ 45: 110,\n                    /*Delete*/ 46: 111,\n                    /*Home*/ 36: 102,\n                    /*End*/ 35: 107,\n                    /*Page Up*/ 33: 104,\n                    /*Page Down*/ 34: 109,\n                    /*F1 */ 112: 59,\n                    /*F2 */ 113: 60,\n                    /*F3 */ 114: 61,\n                    /*F4 */ 115: 62,\n                    /*F5 */ 116: 63,\n                    /*F6 */ 117: 64,\n                    /*F7 */ 118: 65,\n                    /*F8 */ 119: 66,\n                    /*F9 */ 120: 67,\n                    /*F10 */ 121: 68,\n                    /*F11 */ 122: 87,\n                    /*F12 */ 123: 88,\n                    /*. Del*/ 110: 83,\n                    /*0 Ins*/ 96: 82,\n                    /*1 End*/ 97: 79,\n                    /*2 down-arrow*/ 98: 80,\n                    /*3 Pg Dn*/ 99: 81,\n                    /*4 left-arrow*/ 100: 75,\n                    /*5*/ 101: 76,\n                    /*6 right-arrow*/ 102: 77,\n                    /*7 Home*/ \t103: 71,\n                    /*8 up-arrow*/ 104: 72,\n                    /*9 Pg Up*/ 105: 73,\n                    /*+*/ 107: 78,\n                    /*-*/ 109: 74,\n                    /***/ 106: 55,\n                    /*/*/ 111: 98,\n                    /*Keypad Enter*/ 13: 28\n                };\n                var convertedKeys = [];\n                arr.forEach(function (a) {\n                    if (map[a] !== undefined)\n                        convertedKeys.push(map[a]);\n                    //else\n                    //    convertedKeys.push(a);\n                });\n                return convertedKeys;\n            }\n\n            function convertCharCode(ch) {\n                var arr = [];\n                if (ch >= 48 && ch <= 57) { /* 0..9 */\n                    arr[0] = ch;\n                    arr = convertKeycodes(arr);\n                } else if (ch >= 97 && ch <= 122) { /* a..z */\n                    arr[0] = ch - 32;\n                    arr = convertKeycodes(arr);\n                } else if (ch >= 65 && ch <= 90) { /* A..Z */\n                    arr[0] = 16;\n                    arr[1] = ch;\n                    arr = convertKeycodes(arr);\n                } else if (ch == 46) { // .\n                    arr[0] = 52;\n                } else if (ch == 33) { // !\n                    arr[0] = 42;\n                    arr[1] = 2;\n                } else if (ch == 63) { // ?\n                    arr[0] = 42;\n                    arr[1] = 53;\n                } else if (ch == 44) { // ,\n                    arr[0] = 51;\n                } else if (ch == 34) { // \"\n                    arr[0] = 42;\n                    arr[1] = 40;\n                } else if (ch == 39) { // '\n                    arr[0] = 40;\n                } else if (ch == 58) { // :\n                    arr[0] = 42;\n                    arr[1] = 39;\n                } else if (ch == 40) { // (\n                    arr[0] = 42;\n                    arr[1] = 10;\n                } else if (ch == 41) { // )\n                    arr[0] = 42;\n                    arr[1] = 11;\n                } else if (ch == 126) { // ~\n                    arr[0] = 42;\n                    arr[1] = 41;\n                } else if (ch == 42) { // *\n                    arr[0] = 42;\n                    arr[1] = 9;\n                } else if (ch == 45) { // -\n                    arr[0] = 12;\n                } else if (ch == 47) { // /\n                    arr[0] = 53;\n                } else if (ch == 64) { // @\n                    arr[0] = 42;\n                    arr[1] = 3;\n                } else if (ch == 95) { // _\n                    arr[0] = 42;\n                    arr[1] = 12;\n                }\n                return arr;\n            }\n\n            function toKeyCode() {\n                var getCharCode = function (str) {\n                    return str.charCodeAt(str.length - 1);\n                };\n                var cc = getCharCode(this.value);\n                document.getElementById(\"datamessage\").removeEventListener(\"keyup\", toKeyCode);\n                this.value = \"\";\n                var keysArray = convertCharCode(cc);\n                if (datachannel && document.getElementById('keypresssend').checked && keysArray.length) {\n                    var keycodes = {\n                        keycodes: keysArray\n                    };\n                    datachannel.send(JSON.stringify(keycodes));\n                }\n            }\n            ;\n\n            function keydown(e) {\n                if (e.keyCode == 0 || e.keyCode == 229) { // on mobile\n                    return;\n                }\n                e.preventDefault();\n                e.stopPropagation();\n                e.stopImmediatePropagation();\n                keys[e.keyCode] = e.keyCode;\n                for (var i = keys.length; i >= 0; i--) {\n                    if (keys[i] !== 16 && keys[i] !== 17 && keys[i] !== 18 && keys[i] !== 225 && keys[i] !== e.keyCode)\n                        keys[i] = false;\n                }\n                var keysArray = convertKeycodes(getKeycodesArray(keys));\n                if (datachannel && document.getElementById('keypresssend').checked && keysArray.length) {\n                    var keycodes = {\n                        keycodes: keysArray\n                    };\n                    datachannel.send(JSON.stringify(keycodes));\n                }\n            }\n            ;\n\n            function keyup(e) {\n                if (e.keyCode == 0 || e.keyCode == 229) { // on mobile\n                    document.getElementById(\"datamessage\").addEventListener(\"keyup\", toKeyCode);\n                    return;\n                }\n                e.preventDefault();\n                e.stopPropagation();\n                e.stopImmediatePropagation();\n                keys[e.keyCode] = false;\n            }\n            ;\n\n            function keypresssend_selection() {\n                if (document.getElementById('keypresssend').checked) {\n                    window.addEventListener('keydown', keydown, true);\n                    window.addEventListener('keyup', keyup, true);\n                } else {\n                    keys = [];\n                    window.removeEventListener('keydown', keydown, true);\n                    window.removeEventListener('keyup', keyup, true);\n                }\n            }\n\n            function trickleice_selection() {\n                if (document.getElementById('trickleice').value === \"false\") {\n                    trickle_ice = false;\n                } else if (document.getElementById('trickleice').value === \"true\") {\n                    trickle_ice = true;\n                } else {\n                    trickle_ice = null;\n                }\n                return trickle_ice;\n            }\n\n            window.onload = function () {\n                if (window.MediaRecorder === undefined) {\n                    document.getElementById('record').disabled = true;\n                }\n                if (false) {\n                    start();\n                }\n            };\n\n            window.onbeforeunload = function () {\n                if (ws) {\n                    ws.onclose = function () {}; // disable onclose handler first\n                    stop();\n                }\n            };\n</script>\n\n\n\n<script>\n      var sendButton = function(buttonId) {\n\t    buttonPress = buttonId;\n\t    buttonPress1 = buttonId;\n// TO DO : IP shoud be changed dynamically\n        var urlCommand = \"http://\" + \"192.168.0.3\" + '/' + buttonPress;\n        \n        document.getElementById(\"console\").innerHTML = urlCommand;\n        \n\t\tvar xhttp = new XMLHttpRequest();\n\t\txhttp.open(\"GET\", urlCommand, true);\n\t\t\n        xhttp.send();\n\n            }\n   </script>\n\n    </head>\n\n    <body onload=\"start()\">\n\n        <div id=\"container\">\n\n            <div class=\"overlayWrapper\">\n\t\t\t<div id=\"joystick-container\">\n\t\t\t\n\t\t\t<div id=\"joystick\">\n\n                <video id=\"remote-video\" autoplay=\"\" width=\"100%\" height=\"99%\">\n               \n\t\t\t \n                </video>\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t<p class=\"overlay\">\n\t<br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>\t\t\n\t<br/><br/><br/><br/><br/><br/><br/>\t\t\n\n\t\n\t\n                </p>\n\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t\n<button id=\"KEY_POWER\" class=\"btn\" onclick=\"sendButton(this.id)\">PWR</button>\n<button id=\"KEY_1\" class=\"btn\" onclick=\"sendButton(this.id)\">1</button>\n<button id=\"KEY_2\" class=\"btn\" onclick=\"sendButton(this.id)\">2</button>\n<button id=\"KEY_3\" class=\"btn\" onclick=\"sendButton(this.id)\">3</button>\n<button id=\"FULL\" class=\"btn\" onclick=\"fullscreen();\">FULL</button>\n\n<br/>\n\n    <button id=\"preset\" class=\"btn\" onclick=\"pause();\">PRESET</button>\n\t<button id=\"KEY_4\" class=\"btn\" onclick=\"sendButton(this.id)\">4</button>\n\t<button id=\"KEY_5\" class=\"btn\" onclick=\"sendButton(this.id)\">5</button>\n    <button id=\"KEY_6\" class=\"btn\" onclick=\"sendButton(this.id)\">6</button>\n\t<button id=\"KEY_RECORD\" class=\"btn\" onclick=\"start_stop_record();\">REC/STP</button>\n\t\n\t<br/>\n\n    <button id=\"preset\" class=\"btn\" onclick=\"pause();\">PRESET</button>\n\t<button id=\"json\" class=\"btn\" onclick=\"sendButton(this.id)\">JSON</button>\n\t<button id=\"KEY_5\" class=\"btn\" onclick=\"sendButton(this.id)\">5</button>\n    <button id=\"KEY_6\" class=\"btn\" onclick=\"sendButton(this.id)\">6</button>\n\t<button id=\"KEY_RECORD\" class=\"btn\" onclick=\"start_stop_record();\">REC/STP</button>\t\t\t\n\t\t\t\t\n</div>\n\n<p id=\"demo\"></p>\n<p id=\"console\"></p>\n             </div>\n\n\n\n\n            </div>\n\n\n\n        \n        \n            <div class= \"hide\" id=\"controls\">\n            <button type=button id=\"pause\" onclick=\"pause();\" title=\"pause or resume local player\">Pause/Resume</button>\n            <button type=button id=\"mute\" onclick=\"mute();\" title=\"mute or unmute remote audio source\">Mute/Unmute</button>\n            <button type=button id=\"fullscreen\" onclick=\"fullscreen();\">Fullscreen</button>\n            <button type=button id=\"record\" onclick=\"start_stop_record();\" title=\"start or stop recording audio/video\">Start Recording</button>\n        </div>\n        \n           <div class=\"hide\"><fieldset> <legend><b>Remote peer options</b></legend></div>\n            <div class= \"hide\">\n                <span>Video:</span>\n                <label><input type=\"checkbox\" onclick=\"remote_hw_vcodec_selection();\"  id=\"remote_hw_vcodec\" name=\"remote_hw_vcodec\" value=\"remote_hw_vcodec\" title=\"try to force the use of the hardware codec for both encoding and decoding if enabled and supported\" checked>force use of hardware codec for</label>\n                <select id=\"remote_vformat\" name=\"remote_vformat\" onclick=\"remote_hw_vcodec_format_selection();\" title=\"available resolutions and frame rates at the min., max. and start configured bitrates for adaptive streaming which will be scaled from the base 720p 30fps\">                           \n\n                    <option value=\"5\">320x240 15 fps</option>\n                    <option value=\"10\">320x240 30 fps</option>\n                    <option value=\"20\">352x288 30 fps</option>\n                    <option value=\"25\">640x480 15 fps</option>\n                    <option value=\"30\" selected=\"selected\">640x480 30 fps</option>\n                    <option value=\"35\">800x480 30 fps</option>\n                    <option value=\"40\">960x720 30 fps</option>\n                    <option value=\"50\">1024x768 30 fps</option>\n                    <option value=\"55\">1280x720 15 fps</option>\n                    <option value=\"60\">1280x720 30 fps, kbps min.800 max.4000 start1200</option>\n                    <option value=\"63\">1280x720 60 fps</option>\n                    <option value=\"65\">1280x768 15 fps</option>\n                    <option value=\"70\">1280x768 30 fps</option>\n                    <option value=\"80\">1280x960 30 fps</option>\n                    <option value=\"90\">1600x768 30 fps</option>\n                    <option value=\"95\">1640x1232 15 fps</option>\n                    <option value=\"97\">1640x1232 30 fps</option>\n                    <option value=\"100\">1920x1080 15 fps</option>\n                    <option value=\"105\">1920x1080 30 fps</option>\n                </select>\n               \n            </div>\n        </fieldset>\n        <div class=\"hide\">\n            <details id=\"record-detail\">\n                <summary><b>Recorded Audio/Video stream</b></summary>\n                <div>\n                    <div class=\"overlayWrapper\">\n                        <video id=\"recorded-video\" controls>\n                            Your browser does not support the video tag.\n                        </video>\n                        <p class=\"overlay\">recorded</p>\n                    </div>\n                </div>\n                <div>\n                    <p><small>NOTE: some old Chrome version may generate corrupted video if the audio track is not present as well (use Firefox in this case)</small></p>\n                    <button type=button id=\"discard\" onclick=\"discard_recording();\" title=\"discard recorded audio/video\">Discard</button>\n                    <button type=button id=\"download\" onclick=\"download();\" title=\"save recorded audio/video\">Save as</button>\n                </div>\n            </details>\n        </div><br>\n        \n           <div class=\"hide\">\n           <fieldset>\n            <legend><b>Cast local Audio/Video sources to remote peer</b></legend>\n            <div class=\"hide\">\n           <div>\n                <span>Audio:</span>\n                <label><input type=\"checkbox\" onclick=\"singleselection('audio_cast', 'cast_mic');\" id=\"cast_mic\" name=\"audio_cast\" value=\"microphone\">microphone/other input</label>\n                <label><input type=\"checkbox\" id=\"echo_cancellation\" name=\"audio_processing\" title=\"disable any audio processing when casting music\" checked>echo cancellation</label>\n                <!--label><input type=\"checkbox\" onclick=\"singleselection('audio_cast', 'cast_tab');\" id=\"cast_tab\" name=\"audio_cast\" value=\"system\">tab</label-->\n            </div>\n            <div class=\"hide\">\n                <span>Video:</span>\n                <label><input type=\"checkbox\" onclick=\"singleselection('video_cast', 'cast_camera');\" id=\"cast_camera\" name=\"video_cast\" value=\"camera\">camera</label>\n                <label><input type=\"checkbox\" onclick=\"singleselection('video_cast', 'cast_screen');\" id=\"cast_screen\" name=\"video_cast\" value=\"screen\">screen</label>\n                <label><input type=\"checkbox\" onclick=\"singleselection('video_cast', 'cast_window');\" id=\"cast_window\" name=\"video_cast\" value=\"screen\">window</label>\n                <label><input type=\"checkbox\" onclick=\"singleselection('video_cast', 'cast_application');\" id=\"cast_application\" name=\"video_cast\" value=\"application\">application</label>\n            </div>\n            <div class=\"hide\">\n                <p id=\"note1\"><small>NOTE: camera and screen can be casted over HTTPS only in Chrome. For the screen the --enable-usermedia-screen-capturing flag must be set. window or application casting is only supported in Firefox 44 on.</small></p>\n                <p id=\"note2\"><small>NOTE: except for camera, to enable screen, window or application casting open <i>about:config</i> URL\n                        and set <i>media.getusermedia.screensharing.enabled</i> to <i>true</i>\n                        and permanently add the current domain to the list in <i>media.getusermedia.screensharing.allowed_domains.</i></small>\n                </p>\n                <p id=\"note3\"><small>NOTE: if you want to cast music, for better audio quality disable <i>echo-cancellation.</i></small></p>\n                <p id=\"note4\"><small>NOTE: if you want to cast music, for better audio quality disable <i>echo-cancellation</i>,\n                        and <i>aec</i>, <i>noise-suppression</i>, <i>agc</i> in the browser configuration <i>(about:config).</i></small>\n                </p>\n            </div>\n        </fieldset>\n        <div class=\"hide\">\n            <details>\n                <summary><b>Data Channels</b></summary>\n                <fieldset id=\"datachannels\" disabled>\n                    <span>message: </span><input type=\"text\" id=\"datamessage\" value=\"\" title=\"message to send to the remote peer\"/>\n                    <button id=\"datasend\" onclick=\"send_message();\">Send</button>\n                    <span>received: </span><input type=\"text\" readonly=\"readonly\" id=\"datareceived\" size=\"40\" title=\"data received from the remote peer\"/><br>\n                    <label><input type=\"checkbox\" onclick=\"orientationsend_selection();\" id=\"orientationsend\" name=\"orientationsend\" title=\"send device orientation angles when they change\">send device orientation angles alpha, beta, gamma</label>\n                    <label><input type=\"checkbox\" onclick=\"keypresssend_selection();\" id=\"keypresssend\" name=\"keypresssend\" title=\"send keyboard events. Assume US layout. For users with virtual keyboard: put the focus on the 'message' input text item.\">send key codes (US layout)</label>\n                    <label><input type=\"checkbox\" onclick=\"alert('not implemented yet');\" id=\"mousesend\" name=\"mousesend\" title=\"send mouse events\">send mouse events</label>\n                </fieldset>\n                <!--fieldset id=\"localdatachannels\">\n                    <button id=\"datacreate\" onclick=\"create_localdatachannel();\">Create</button>\n                    <button id=\"dataclose\" onclick=\"close_localdatachannel();\">Close</button>\n                </fieldset-->\n            </details>\n        </div><br>\n        <div class=\"hide\" id=\"commands\">\n            <details open>\n                <summary><b>Advanced options</b></summary>\n                <fieldset>\n                    <span>Remote Peer/Signalling Server Address: </span><input required type=\"text\" id=\"signalling_server\" value=\"10.1.10.40:8090\" title=\"<host>:<port>, default address is autodetected\"/><br>\n                    <span>Optional ICE Servers (STUN/TURN): </span><input type=\"text\" id=\"ice_servers\" value=\"\" title=\"array of RTCIceServer objects as valid JSON string\"/><br>\n                    <span>Trickle ICE: </span>\n                    <select onclick=\"trickleice_selection();\" id=\"trickleice\" name=\"trickleice\" title=\"enable trickle ice\">\n                        <option value=\"auto\">auto</option>\n                        <option value=\"true\" selected=\"selected\">true</option>\n                        <option value=\"false\">false</option>\n                    </select>\n                </fieldset>\n            </details>\n            <button id=\"start\" style=\"background-color: green; color: white\" onclick=\"start();\">Call!</button>\n            <button disabled id=\"stop\" style=\"background-color: red; color: white\" onclick=\"stop();\">Hang up</button>\n        </div><br>\n     <div class=\"hide\">\n        <a target=\"_top\" href=\"/\">home</a>&nbsp;<a href=\"/panel\" target=\"_blank\" title=\"change the image settings on-the-fly\">control panel</a>\n   </div>\n\n<script>   \n\t\t\n \nvar joystick = document.getElementById('joystick');\njoystick.onmousedown = function (event) {\n    if(event.buttons === 1) {\n        var x = event.clientX - joystick.getBoundingClientRect().left;\n        var y = event.clientY - joystick.getBoundingClientRect().top;\n        var coords = \"X: \" + x + \", Y: \" + y;\n        document.getElementById(\"demo\").innerHTML = coords;\n\t}\n\n\t\n\t\n\t    if (x < 50 && y < 50) {\n\t    buttonPress = \"tele\"; }  \n        else if (x < 50 && y > 190) {\n\t    buttonPress = \"wide\"; } \n        else if (x > 260 && y < 50) {\n\t    buttonPress = \"KEY_HOME\"; } \n\t\telse if (x > 260 && y > 190 ) {\n\t    buttonPress = \"KEY_MENU\"; } \n        else if (x < 150 && y > 51 && y < 189) {\n\t    buttonPress = \"KEY_LEFT\"; }  \n\t\telse if (y < 50 && x > 51 && x < 259) {\n        buttonPress = \"KEY_UP\"; } \n\t\telse if (x > 260 && y > 51 && y < 189) {\n        buttonPress = \"KEY_RIGHT\"; } \n\t\telse if (y > 190 && x > 51 && x < 259) {\n        buttonPress = \"KEY_DOWN\"; } \n\t\t\n\t\telse {\n        buttonPress = \"\" }\n\n\n\n//var ip =  msg.payload.internalIPv4;\nvar urlCommand = \"http://\" + \"192.168.0.3\" + ':8082' + \"/send/\" + buttonPress;\n        document.getElementById(\"console\").innerHTML = urlCommand;\n\t\tvar xhttp = new XMLHttpRequest();\n\t\txhttp.open(\"GET\", urlCommand, true);\n        xhttp.send();\n\n\n}\n\n</script>\n\n","storeOutMessages":true,"fwdInMessages":false,"templateScope":"local","x":560,"y":480,"wires":[[]]},{"id":"43a8f19d.d0782","type":"inject","z":"297abac8.084176","name":"CREATE DB","topic":"CREATE TABLE 'sensorValues' ('id' INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,'epoch' INTEGER,'date' INTEGER,'time' INTEGER,'location' TEXT,'voltage' REAL,'temperature' REAL,'humidity' REAL,'pressure' REAL,'light' REAL,'openclose' REAL,'level' REAL,'presence' REAL,'motion' REAL,'custom' REAL,'rssi' REAL,'mode' REAL,'ip' REAL,'channel' REAL,'sleeptime' REAL,'uptime' REAL)","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":150,"y":1680,"wires":[["5ea532ae.9e516c"]]},{"id":"f36e5e71.77364","type":"debug","z":"297abac8.084176","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":650,"y":1680,"wires":[]},{"id":"53ea2311.6fae0c","type":"template","z":"297abac8.084176","name":"Insert To sensorValues","field":"topic","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"INSERT INTO sensorValues(epoch,date,time,location,voltage,temperature,humidity,pressure,light,openclose,level,motion,custom,rssi,mode,ip,channel,sleeptime,uptime)\nVALUES (\"{{payload.epoch}}\",\"{{payload.date}}\",\"{{payload.time}}\",\"{{payload.location}}\",\"{{payload.voltage}}\",\"{{payload.temperature}}\",\"{{payload.humidity}}\",\"{{payload.pressure}}\",\n\"{{paylod.light}}\",\"{{payload.openclose}}\",\"{{payload.level}}\",\"{{payload.motion}}\",\"{{payload.custom}}\",\"{{payload.rssi}}\",\n\"{{payload.mode}}\",\"{{payload.ip}}\",\"{{payload.channel}}\",\"{{payload.sleeptime}}\",\"{{payload.uptime}}\");","output":"str","x":620,"y":160,"wires":[["81e271e4.915ec"]]},{"id":"81e271e4.915ec","type":"sqlite","z":"297abac8.084176","mydb":"4bf6a69d.e3e968","sql":"","name":"Data In","x":380,"y":100,"wires":[["59794463.884bac"]]},{"id":"db50ea1f.038428","type":"function","z":"297abac8.084176","name":"Add Times","func":"function pad(n) {\n    return n<10 ? '0'+n : n;\n}\nvar currentDate = new Date();\nvar date = currentDate.getDate();\nvar month = currentDate.getMonth(); \nvar year = currentDate.getFullYear();\nvar epochNow = currentDate.getTime();\nvar YYYYMMDD  = year + \"-\" + pad(month+1) + \"-\" + pad(date);\nvar HH = currentDate.getHours();\nvar MM = currentDate.getMinutes();\nvar SS = currentDate.getSeconds();\nvar HHMMSS = pad(HH) +\":\"+ pad(MM) +\":\"+pad(SS);\nvar timeNow = HHMMSS;\nvar dateNow = YYYYMMDD;\n\nglobal.set(\"epoch\", epochNow);\nglobal.set(\"time\", timeNow);\nglobal.set(\"date\", dateNow);\n\nmsg.payload.epoch = global.get(\"epoch\");\nmsg.payload.time = global.get(\"time\");\nmsg.payload.date = global.get(\"date\");\nreturn msg;","outputs":1,"noerr":0,"x":410,"y":180,"wires":[["53ea2311.6fae0c","f80fa46b.317ac8"]]},{"id":"bf340bec.02cb28","type":"inject","z":"297abac8.084176","name":"Display Data","topic":"SELECT * FROM sensorValues  ORDER BY time DESC LIMIT 1000;","payload":"","payloadType":"date","repeat":"5","crontab":"","once":false,"onceDelay":0.1,"x":160,"y":1740,"wires":[["cdece087.2b419"]]},{"id":"4de1be40.8d925","type":"inject","z":"297abac8.084176","name":"Drop Table","topic":"DROP TABLE sensorValues;","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":140,"y":1640,"wires":[["5ea532ae.9e516c"]]},{"id":"cdece087.2b419","type":"sqlite","z":"297abac8.084176","mydb":"4bf6a69d.e3e968","sqlquery":"msg.topic","sql":"","name":"Data Out","x":340,"y":1740,"wires":[["d29fd5fa.2e88d8"]]},{"id":"d29fd5fa.2e88d8","type":"ui_template","z":"297abac8.084176","group":"a59b864f.91fef8","name":"Show SQLite Data","order":4,"width":"19","height":"14","format":"\n    \n <div>\n     <form>\n      <span class=\"input-group\">\n          <i class=\"fa fa-search\"></i>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Search\" ng-model=\"search\">\n      </span>      \n  </form>\n  <div class=\"container\" ng-app=\"sortApp\">\n<table style=\"width:100%\">\n      \n        <thead>\n        <tr style=\"width:100%\">\n            <td>\n          <a href=\"#\">\n            Index\n          </a>\n        </td>\n        \n        <td>\n          <a href=\"#\" ng-click=\"sortType = 'time'; sortReverse = !sortReverse\">\n            Time\n            <span ng-show=\"sortType == 'time' && !sortReverse\" class=\"fa fa-caret-down\"></span>\n            <span ng-show=\"sortType == 'time' && sortReverse\" class=\"fa fa-caret-up\"></span>\n          </a>\n        </td>\n\t\t\n\t\t<td>\n          <a href=\"#\" ng-click=\"sortType = 'location'; sortReverse = !sortReverse\">\n            Location\n            <span ng-show=\"sortType == 'location' && !sortReverse\" class=\"fa fa-caret-down\"></span>\n            <span ng-show=\"sortType == 'location' && sortReverse\" class=\"fa fa-caret-up\"></span>\n          </a>\n        </td>\n\t\t\n\t\t\n\t\t\n        <td>\n          <a href=\"#\" ng-click=\"sortType = 'voltage'; sortReverse = !sortReverse\">\n          Battery\n            <span ng-show=\"sortType == 'voltage' && !sortReverse\" class=\"fa fa-caret-down\"></span>\n            <span ng-show=\"sortType == 'voltage' && sortReverse\" class=\"fa fa-caret-up\"></span>\n          </a>\n        </td>\n\t\t<td>\n          <a href=\"#\" ng-click=\"sortType = 'temperature'; sortReverse = !sortReverse\">\n          Temperature\n            <span ng-show=\"sortType == 'temperature' && !sortReverse\" class=\"fa fa-caret-down\"></span>\n            <span ng-show=\"sortType == 'temperature' && sortReverse\" class=\"fa fa-caret-up\"></span>\n          </a>\n        </td>\n\t\t\n\t\t<td>\n          <a href=\"#\" ng-click=\"sortType = 'humidity'; sortReverse = !sortReverse\">\n         Humidity\n            <span ng-show=\"sortType == 'humidity' && !sortReverse\" class=\"fa fa-caret-down\"></span>\n            <span ng-show=\"sortType == 'humidity' && sortReverse\" class=\"fa fa-caret-up\"></span>\n          </a>\n        </td>\n\t\t\n\t\t<td>\n          <a href=\"#\" ng-click=\"sortType = 'pressure'; sortReverse = !sortReverse\">\n          Presuure\n            <span ng-show=\"sortType == 'pressure' && !sortReverse\" class=\"fa fa-caret-down\"></span>\n            <span ng-show=\"sortType == 'pressure' && sortReverse\" class=\"fa fa-caret-up\"></span>\n          </a>\n        </td>\n\t\t\n\t\t<td>\n          <a href=\"#\" ng-click=\"sortType = 'light'; sortReverse = !sortReverse\">\n          Light\n            <span ng-show=\"sortType == 'light' && !sortReverse\" class=\"fa fa-caret-down\"></span>\n            <span ng-show=\"sortType == 'light' && sortReverse\" class=\"fa fa-caret-up\"></span>\n          </a>\n        </td>\n\t\t    \n\t\t    <td>\n          <a href=\"#\" ng-click=\"sortType = 'rssi'; sortReverse = !sortReverse\">\n          RSSI\n            <span ng-show=\"sortType == 'rssi' && !sortReverse\" class=\"fa fa-caret-down\"></span>\n            <span ng-show=\"sortType == 'rssi' && sortReverse\" class=\"fa fa-caret-up\"></span>\n          </a>\n        </td>\n\n        \n          </tr>\n          </thead>\n          <tbody>\n        <tr ng-repeat=\"x in msg.payload | limitTo:100 | orderBy:sortType:sortReverse | filter:search track by $index\" ng-click=\"msg.payload = x;send(msg);\" style=\"width:100%\" flex>\n    \n    <td>{{$index}}</td>\n    \n    <td>{{msg.payload[$index].time}}</td>\n    <td>{{msg.payload[$index].location}}</td>\n    <td>{{msg.payload[$index].voltage}}</td>\n    <td>{{msg.payload[$index].temperature}}</td> \n    <td>{{msg.payload[$index].humidity}}</td> \n    <td>{{msg.payload[$index].pressure}}</td> \n    <td>{{msg.payload[$index].light}}</td> \n    <td>{{msg.payload[$index].rssi}}</td> \n   \n         </tr>\n\t\t  \n\t\t        </tbody>\n\t\t\t\t</table>\n</div>\n</div>\n\n</body></html>\n   \n","storeOutMessages":true,"fwdInMessages":true,"templateScope":"local","x":530,"y":1740,"wires":[["f36e5e71.77364"]]},{"id":"5ea532ae.9e516c","type":"sqlite","z":"297abac8.084176","mydb":"4bf6a69d.e3e968","sqlquery":"msg.topic","sql":"","name":"","x":400,"y":1680,"wires":[["f36e5e71.77364"]]},{"id":"760acc48.780114","type":"mqtt in","z":"297abac8.084176","name":"","topic":"deviceStatus/#","qos":"0","datatype":"auto","broker":"b81701a5.db23e","x":100,"y":140,"wires":[["9006364a.7ba428"]]},{"id":"4237afa8.a915e","type":"ui_template","z":"297abac8.084176","group":"5e1e2f70.549cf","name":"Circuit Simulator","order":1,"width":"19","height":"40","format":"\n\n\n<iframe width=800 height=850 src=\"http://www.falstad.com/circuit/circuitjs.html?startCircuit=lrc.txt\"></iframe>\n<p>\nThis is an electronic circuit simulator.<span\nstyle=\"mso-spacerun: yes\">&nbsp; </span>When the applet starts up you will see\nan animated schematic of a simple LRC circuit.  The green\ncolor indicates positive voltage.<span style=\"mso-spacerun: yes\">&nbsp;\n</span>The gray color indicates ground.<span style=\"mso-spacerun: yes\">&nbsp;\n</span>A red color indicates negative voltage.<span style=\"mso-spacerun:\nyes\">&nbsp; </span>The moving yellow dots indicate current.</p>\n\n<p>To turn a switch on or off, just click on it.<span style=\"mso-spacerun:\nyes\">&nbsp; </span>If you move the mouse over any component of the circuit, you\nwill see a short description of that component and its current state in the\nlower right corner of the window.<span style=\"mso-spacerun: yes\">&nbsp; </span>To\nmodify a component,\nmove the mouse over it, click the right mouse button (or control-click\nif you have a Mac) and select &#8220;Edit&#8221;.</p>\n<p>\nThe \"Circuits\" menu contains a lot of sample circuits for you to try.\n<p>\n<a href=\"http://www.falstad.com/circuit/circuitjs.html\">Full Screen version</a>.\n<p>\n<a target=\"_blank\" href=\"http://www.falstad.com/circuit/directions.html\">Directions</a>.\n<p>\n<a href=\"http://www.falstad.com/circuit/CircuitJS1.dmg\">Standalone (offline) version for Mac</a>, and <a href=\"circuitjs1.zip\">for Windows</a>.\n<p>\n<a href=\"http://www.falstad.com/circuit/e-index.html\">Index of Circuit Examples</a>.  (<a href=\"polish/e-index.html\">Polish version</a>)\n<p>\n<a href=\"https://www.falstad.com/mathphysics.html\">More applets.</a>\n<p>\nJavascript version.  <a href=\"https://github.com/pfalstad/circuitjs1/commits/master\">Latest changes here</a>, including <a href=\"subcircuits.html\">subcircuits</a>.\n<p>\n<a href=\"https://github.com/sharpie7/circuitjs1/issues\">Report a problem/feature request</a>\n<p>\nHuge thanks to <a href=\"http://lushprojects.com/circuitjs/\">Iain Sharp</a> for the Javascript port.  You can still use the <a href=\"/circuit-java/\">original Java version</a>.  More acknowledgements in the about box.\n<hr>\n<a href=\"/apps/\"><img src=\"http://www.falstad.com/circuit/ripplebanner.gif\"></a><br>\n<hr>\n<script type=\"text/javascript\"><!--\ngoogle_ad_client = \"pub-1974179407250396\";\n/* 728x90, created 7/9/08 */\ngoogle_ad_slot = \"3265434789\";\ngoogle_ad_width = 728;\ngoogle_ad_height = 90;\n//-->\n</script>\n<script type=\"text/javascript\"\nsrc=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n<hr>\n<a href=\"http://www.falstad.com/circuit/mathphysics.html\"><img src=\"http://www.falstad.com/circuit/mathphysics_small.gif\"></a>\n<a href=\"https://www.falstad.com/index.html\"><img src=\"http://www.falstad.com/circuit/me_small.gif\"></a>\n<br><i>java@</i><i>falstad.com</i>\n<hr>\n<a href=\"https://s05.flagcounter.com/more/pTvk\"><img src=\"https://s05.flagcounter.com/count/pTvk/bg=FFFFFF/txt=000000/border=CCCCCC/columns=6/maxflags=36/viewers=0/labels=0/\" alt=\"free counters\" border=\"0\"></a>\n\n<script>\nif (window.location.href.indexOf(\"circuit/#\") > 0) {\n   var ix = window.location.href.indexOf(\"circuit/#\");\n   window.location.assign(window.location.href.slice(0, ix) + \"http://falstad.com/circuit/circuitjs.html?cct=\" + window.location.href.slice(ix+9));\n}\n</script>\n\n\n","storeOutMessages":true,"fwdInMessages":false,"templateScope":"local","x":580,"y":600,"wires":[[]]},{"id":"c5d43a9b.6bf1c8","type":"mosca in","z":"297abac8.084176","mqtt_port":"1883","mqtt_ws_port":8080,"name":"","username":"","password":"","dburl":"","x":120,"y":320,"wires":[["59794463.884bac"]]},{"id":"b81701a5.db23e","type":"mqtt-broker","z":"","name":"uMQTT","broker":"192.168.0.2","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthRetain":"true","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"a59b864f.91fef8","type":"ui_group","z":"","name":"Data Monitor","tab":"2c2914b0.77f47c","order":4,"disp":true,"width":"19","collapse":true},{"id":"9f15f2e7.e5bb5","type":"ui_group","z":"","name":"Settings","tab":"2c2914b0.77f47c","order":3,"disp":true,"width":"19","collapse":true},{"id":"4f79192b.21b748","type":"ui_group","z":"","name":"Commands","tab":"2c2914b0.77f47c","order":1,"disp":true,"width":"19","collapse":true},{"id":"3786b28.f9d5b4e","type":"ui_group","z":"","name":"Camera","tab":"2c2914b0.77f47c","order":2,"disp":true,"width":"19","collapse":true},{"id":"4bf6a69d.e3e968","type":"sqlitedb","z":"","db":"/home/pi/rpieasy/sensors","mode":"RWC"},{"id":"5e1e2f70.549cf","type":"ui_group","z":"","name":"Circuit Simulator","tab":"153021c3.2e1a8e","order":2,"disp":true,"width":"20","collapse":false},{"id":"2c2914b0.77f47c","type":"ui_tab","z":"","name":"Home","icon":"dashboard","order":1,"disabled":false,"hidden":false},{"id":"153021c3.2e1a8e","type":"ui_tab","z":"","name":"Circuit Simulator","icon":"home","order":"1","disabled":false,"hidden":false}]
